{"version":3,"file":"component---src-pages-index-js-334d2dd0963cf8f97361.js","mappings":"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","sources":["webpack://smooth-scrollbar-gatsby/../node_modules/.pnpm/camelcase@5.3.1/node_modules/camelcase/index.js","webpack://smooth-scrollbar-gatsby/../node_modules/.pnpm/gsap@3.10.4/node_modules/gsap/Observer.js","webpack://smooth-scrollbar-gatsby/../node_modules/.pnpm/gsap@3.10.4/node_modules/gsap/ScrollTrigger.js","webpack://smooth-scrollbar-gatsby/./src/pages/index.js","webpack://smooth-scrollbar-gatsby/./src/components/index.module.css","webpack://smooth-scrollbar-gatsby/../src/image-utils.ts","webpack://smooth-scrollbar-gatsby/../src/components/hooks.ts","webpack://smooth-scrollbar-gatsby/../src/components/picture.tsx","webpack://smooth-scrollbar-gatsby/../src/components/layout-wrapper.tsx","webpack://smooth-scrollbar-gatsby/../src/components/placeholder.tsx","webpack://smooth-scrollbar-gatsby/../src/components/main-image.tsx","webpack://smooth-scrollbar-gatsby/../src/components/gatsby-image.browser.tsx","webpack://smooth-scrollbar-gatsby/../src/components/gatsby-image.server.tsx","webpack://smooth-scrollbar-gatsby/../src/components/static-image.server.tsx","webpack://smooth-scrollbar-gatsby/../src/components/static-image.tsx"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/*!\n * Observer 3.10.4\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar gsap,\n    _coreInitted,\n    _clamp,\n    _win,\n    _doc,\n    _docEl,\n    _body,\n    _isTouch,\n    _pointerType,\n    ScrollTrigger,\n    _root,\n    _normalizer,\n    _eventTypes,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _passThrough = function _passThrough(p) {\n  return p;\n},\n    _startup = 1,\n    _observers = [],\n    _scrollers = [],\n    _proxies = [],\n    _getTime = Date.now,\n    _bridge = function _bridge(name, value) {\n  return value;\n},\n    _integrate = function _integrate() {\n  var core = ScrollTrigger.core,\n      data = core.bridge || {},\n      scrollers = core._scrollers,\n      proxies = core._proxies;\n  scrollers.push.apply(scrollers, _scrollers);\n  proxies.push.apply(proxies, _proxies);\n  _scrollers = scrollers;\n  _proxies = proxies;\n\n  _bridge = function _bridge(name, value) {\n    return data[name](value);\n  };\n},\n    _getProxyProp = function _getProxyProp(element, property) {\n  return ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property];\n},\n    _isViewport = function _isViewport(el) {\n  return !!~_root.indexOf(el);\n},\n    _addListener = function _addListener(element, type, func, nonPassive, capture) {\n  return element.addEventListener(type, func, {\n    passive: !nonPassive,\n    capture: !!capture\n  });\n},\n    _removeListener = function _removeListener(element, type, func, capture) {\n  return element.removeEventListener(type, func, !!capture);\n},\n    _scrollLeft = \"scrollLeft\",\n    _scrollTop = \"scrollTop\",\n    _onScroll = function _onScroll() {\n  return _normalizer && _normalizer.isPressed || _scrollers.cache++;\n},\n    _scrollCacheFunc = function _scrollCacheFunc(f, doNotCache) {\n  var cachingFunc = function cachingFunc(value) {\n    // since reading the scrollTop/scrollLeft/pageOffsetY/pageOffsetX can trigger a layout, this function allows us to cache the value so it only gets read fresh after a \"scroll\" event fires (or while we're refreshing because that can lengthen the page and alter the scroll position). when \"soft\" is true, that means don't actually set the scroll, but cache the new value instead (useful in ScrollSmoother)\n    if (value || value === 0) {\n      _startup && (_win.history.scrollRestoration = \"manual\"); // otherwise the new position will get overwritten by the browser onload.\n\n      var isNormalizing = _normalizer && _normalizer.isPressed;\n      value = cachingFunc.v = Math.round(value) || (_normalizer && _normalizer.iOS ? 1 : 0); //TODO: iOS Bug: if you allow it to go to 0, Safari can start to report super strange (wildly inaccurate) touch positions!\n\n      f(value);\n      cachingFunc.cacheID = _scrollers.cache;\n      isNormalizing && _bridge(\"ss\", value); // set scroll (notify ScrollTrigger so it can dispatch a \"scrollStart\" event if necessary\n    } else if (doNotCache || _scrollers.cache !== cachingFunc.cacheID || _bridge(\"ref\")) {\n      cachingFunc.cacheID = _scrollers.cache;\n      cachingFunc.v = f();\n    }\n\n    return cachingFunc.v + cachingFunc.offset;\n  };\n\n  cachingFunc.offset = 0;\n  return f && cachingFunc;\n},\n    _horizontal = {\n  s: _scrollLeft,\n  p: \"left\",\n  p2: \"Left\",\n  os: \"right\",\n  os2: \"Right\",\n  d: \"width\",\n  d2: \"Width\",\n  a: \"x\",\n  sc: _scrollCacheFunc(function (value) {\n    return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0;\n  })\n},\n    _vertical = {\n  s: _scrollTop,\n  p: \"top\",\n  p2: \"Top\",\n  os: \"bottom\",\n  os2: \"Bottom\",\n  d: \"height\",\n  d2: \"Height\",\n  a: \"y\",\n  op: _horizontal,\n  sc: _scrollCacheFunc(function (value) {\n    return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0;\n  })\n},\n    _getTarget = function _getTarget(t) {\n  return gsap.utils.toArray(t)[0] || (typeof t === \"string\" && gsap.config().nullTargetWarn !== false ? console.warn(\"Element not found:\", t) : null);\n},\n    _getScrollFunc = function _getScrollFunc(element, _ref) {\n  var s = _ref.s,\n      sc = _ref.sc; // we store the scroller functions in a alternating sequenced Array like [element, verticalScrollFunc, horizontalScrollFunc, ...] so that we can minimize memory, maximize performance, and we also record the last position as a \".rec\" property in order to revert to that after refreshing to ensure things don't shift around.\n\n  var i = _scrollers.indexOf(element),\n      offset = sc === _vertical.sc ? 1 : 2;\n\n  !~i && (i = _scrollers.push(element) - 1);\n  return _scrollers[i + offset] || (_scrollers[i + offset] = _scrollCacheFunc(_getProxyProp(element, s), true) || (_isViewport(element) ? sc : _scrollCacheFunc(function (value) {\n    return arguments.length ? element[s] = value : element[s];\n  })));\n},\n    _getVelocityProp = function _getVelocityProp(value, minTimeRefresh, useDelta) {\n  var v1 = value,\n      v2 = value,\n      t1 = _getTime(),\n      t2 = t1,\n      min = minTimeRefresh || 50,\n      dropToZeroTime = Math.max(500, min * 3),\n      update = function update(value, force) {\n    var t = _getTime();\n\n    if (force || t - t1 > min) {\n      v2 = v1;\n      v1 = value;\n      t2 = t1;\n      t1 = t;\n    } else if (useDelta) {\n      v1 += value;\n    } else {\n      // not totally necessary, but makes it a bit more accurate by adjusting the v1 value according to the new slope. This way we're not just ignoring the incoming data. Removing for now because it doesn't seem to make much practical difference and it's probably not worth the kb.\n      v1 = v2 + (value - v2) / (t - t2) * (t1 - t2);\n    }\n  },\n      reset = function reset() {\n    v2 = v1 = useDelta ? 0 : v1;\n    t2 = t1 = 0;\n  },\n      getVelocity = function getVelocity(latestValue) {\n    var tOld = t2,\n        vOld = v2,\n        t = _getTime();\n\n    (latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);\n    return t1 === t2 || t - t2 > dropToZeroTime ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;\n  };\n\n  return {\n    update: update,\n    reset: reset,\n    getVelocity: getVelocity\n  };\n},\n    _getEvent = function _getEvent(e, preventDefault) {\n  preventDefault && !e._gsapAllow && e.preventDefault();\n  return e.changedTouches ? e.changedTouches[0] : e;\n},\n    _getAbsoluteMax = function _getAbsoluteMax(a) {\n  var max = Math.max.apply(Math, a),\n      min = Math.min.apply(Math, a);\n  return Math.abs(max) >= Math.abs(min) ? max : min;\n},\n    _setScrollTrigger = function _setScrollTrigger() {\n  ScrollTrigger = gsap.core.globals().ScrollTrigger;\n  ScrollTrigger && ScrollTrigger.core && _integrate();\n},\n    _initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (gsap && typeof document !== \"undefined\" && document.body) {\n    _win = window;\n    _doc = document;\n    _docEl = _doc.documentElement;\n    _body = _doc.body;\n    _root = [_win, _doc, _docEl, _body];\n    _clamp = gsap.utils.clamp;\n    _pointerType = \"onpointerenter\" in _body ? \"pointer\" : \"mouse\"; // isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\n    _isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : \"ontouchstart\" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0;\n    _eventTypes = Observer.eventTypes = (\"ontouchstart\" in _docEl ? \"touchstart,touchmove,touchcancel,touchend\" : !(\"onpointerdown\" in _docEl) ? \"mousedown,mousemove,mouseup,mouseup\" : \"pointerdown,pointermove,pointercancel,pointerup\").split(\",\");\n    setTimeout(function () {\n      return _startup = 0;\n    }, 500);\n\n    _setScrollTrigger();\n\n    _coreInitted = 1;\n  }\n\n  return _coreInitted;\n};\n\n_horizontal.op = _vertical;\n_scrollers.cache = 0;\nexport var Observer = /*#__PURE__*/function () {\n  function Observer(vars) {\n    this.init(vars);\n  }\n\n  var _proto = Observer.prototype;\n\n  _proto.init = function init(vars) {\n    _coreInitted || _initCore(gsap) || console.warn(\"Please gsap.registerPlugin(Observer)\");\n    ScrollTrigger || _setScrollTrigger();\n    var tolerance = vars.tolerance,\n        dragMinimum = vars.dragMinimum,\n        type = vars.type,\n        target = vars.target,\n        lineHeight = vars.lineHeight,\n        debounce = vars.debounce,\n        preventDefault = vars.preventDefault,\n        onStop = vars.onStop,\n        onStopDelay = vars.onStopDelay,\n        ignore = vars.ignore,\n        wheelSpeed = vars.wheelSpeed,\n        event = vars.event,\n        onDragStart = vars.onDragStart,\n        onDragEnd = vars.onDragEnd,\n        onDrag = vars.onDrag,\n        onPress = vars.onPress,\n        onRelease = vars.onRelease,\n        onRight = vars.onRight,\n        onLeft = vars.onLeft,\n        onUp = vars.onUp,\n        onDown = vars.onDown,\n        onChangeX = vars.onChangeX,\n        onChangeY = vars.onChangeY,\n        onChange = vars.onChange,\n        onToggleX = vars.onToggleX,\n        onToggleY = vars.onToggleY,\n        onHover = vars.onHover,\n        onHoverEnd = vars.onHoverEnd,\n        onMove = vars.onMove,\n        ignoreCheck = vars.ignoreCheck,\n        isNormalizer = vars.isNormalizer,\n        onGestureStart = vars.onGestureStart,\n        onGestureEnd = vars.onGestureEnd,\n        onWheel = vars.onWheel,\n        onEnable = vars.onEnable,\n        onDisable = vars.onDisable,\n        onClick = vars.onClick,\n        scrollSpeed = vars.scrollSpeed,\n        capture = vars.capture,\n        allowClicks = vars.allowClicks,\n        lockAxis = vars.lockAxis,\n        onLockAxis = vars.onLockAxis;\n    this.target = target = _getTarget(target) || _docEl;\n    this.vars = vars;\n    ignore && (ignore = gsap.utils.toArray(ignore));\n    tolerance = tolerance || 0;\n    dragMinimum = dragMinimum || 0;\n    wheelSpeed = wheelSpeed || 1;\n    scrollSpeed = scrollSpeed || 1;\n    type = type || \"wheel,touch,pointer\";\n    debounce = debounce !== false;\n    lineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22); // note: browser may report \"normal\", so default to 22.\n\n    var id,\n        onStopDelayedCall,\n        dragged,\n        moved,\n        wheeled,\n        locked,\n        axis,\n        self = this,\n        prevDeltaX = 0,\n        prevDeltaY = 0,\n        scrollFuncX = _getScrollFunc(target, _horizontal),\n        scrollFuncY = _getScrollFunc(target, _vertical),\n        scrollX = scrollFuncX(),\n        scrollY = scrollFuncY(),\n        limitToTouch = ~type.indexOf(\"touch\") && !~type.indexOf(\"pointer\") && _eventTypes[0] === \"pointerdown\",\n        // for devices that accommodate mouse events and touch events, we need to distinguish.\n    isViewport = _isViewport(target),\n        ownerDoc = target.ownerDocument || _doc,\n        deltaX = [0, 0, 0],\n        // wheel, scroll, pointer/touch\n    deltaY = [0, 0, 0],\n        onClickTime = 0,\n        clickCapture = function clickCapture() {\n      return onClickTime = _getTime();\n    },\n        _ignoreCheck = function _ignoreCheck(e, isPointerOrTouch) {\n      return (self.event = e) && ignore && ~ignore.indexOf(e.target) || isPointerOrTouch && limitToTouch && e.pointerType !== \"touch\" || ignoreCheck && ignoreCheck(e, isPointerOrTouch);\n    },\n        onStopFunc = function onStopFunc() {\n      self._vx.reset();\n\n      self._vy.reset();\n\n      onStopDelayedCall.pause();\n      onStop && onStop(self);\n    },\n        update = function update() {\n      var dx = self.deltaX = _getAbsoluteMax(deltaX),\n          dy = self.deltaY = _getAbsoluteMax(deltaY),\n          changedX = Math.abs(dx) >= tolerance,\n          changedY = Math.abs(dy) >= tolerance;\n\n      onChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY); // in ScrollTrigger.normalizeScroll(), we need to know if it was touch/pointer so we need access to the deltaX/deltaY Arrays before we clear them out.\n\n      if (changedX) {\n        onRight && self.deltaX > 0 && onRight(self);\n        onLeft && self.deltaX < 0 && onLeft(self);\n        onChangeX && onChangeX(self);\n        onToggleX && self.deltaX < 0 !== prevDeltaX < 0 && onToggleX(self);\n        prevDeltaX = self.deltaX;\n        deltaX[0] = deltaX[1] = deltaX[2] = 0;\n      }\n\n      if (changedY) {\n        onDown && self.deltaY > 0 && onDown(self);\n        onUp && self.deltaY < 0 && onUp(self);\n        onChangeY && onChangeY(self);\n        onToggleY && self.deltaY < 0 !== prevDeltaY < 0 && onToggleY(self);\n        prevDeltaY = self.deltaY;\n        deltaY[0] = deltaY[1] = deltaY[2] = 0;\n      }\n\n      if (moved || dragged) {\n        onMove && onMove(self);\n        onLockAxis && locked && onLockAxis(self);\n\n        if (dragged) {\n          onDrag(self);\n          dragged = false;\n        }\n\n        moved = locked = false;\n      }\n\n      if (wheeled) {\n        onWheel(self);\n        wheeled = false;\n      }\n\n      id = 0;\n    },\n        onDelta = function onDelta(x, y, index) {\n      deltaX[index] += x;\n      deltaY[index] += y;\n\n      self._vx.update(x);\n\n      self._vy.update(y);\n\n      debounce ? id || (id = requestAnimationFrame(update)) : update();\n    },\n        onTouchOrPointerDelta = function onTouchOrPointerDelta(x, y) {\n      if (axis !== \"y\") {\n        deltaX[2] += x;\n\n        self._vx.update(x, true); // update the velocity as frequently as possible instead of in the debounced function so that very quick touch-scrolls (flicks) feel natural. If it's the mouse/touch/pointer, force it so that we get snappy/accurate momentum scroll.\n\n      }\n\n      if (axis !== \"x\") {\n        deltaY[2] += y;\n\n        self._vy.update(y, true);\n      }\n\n      if (lockAxis && !axis) {\n        self.axis = axis = Math.abs(x) > Math.abs(y) ? \"x\" : \"y\";\n        locked = true;\n      }\n\n      debounce ? id || (id = requestAnimationFrame(update)) : update();\n    },\n        _onDrag = function _onDrag(e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      e = _getEvent(e, preventDefault);\n      var x = e.clientX,\n          y = e.clientY,\n          dx = x - self.x,\n          dy = y - self.y,\n          isDragging = self.isDragging;\n      self.x = x;\n      self.y = y;\n\n      if (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {\n        onDrag && (dragged = true);\n        isDragging || (self.isDragging = true);\n        onTouchOrPointerDelta(dx, dy);\n        isDragging || onDragStart && onDragStart(self);\n      }\n    },\n        _onPress = self.onPress = function (e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      self.axis = axis = null;\n      onStopDelayedCall.pause();\n      self.isPressed = true;\n      e = _getEvent(e); // note: may need to preventDefault(?) Won't side-scroll on iOS Safari if we do, though.\n\n      prevDeltaX = prevDeltaY = 0;\n      self.startX = self.x = e.clientX;\n      self.startY = self.y = e.clientY;\n\n      self._vx.reset(); // otherwise the t2 may be stale if the user touches and flicks super fast and releases in less than 2 requestAnimationFrame ticks, causing velocity to be 0.\n\n\n      self._vy.reset();\n\n      _addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, preventDefault, true);\n\n      self.deltaX = self.deltaY = 0;\n      onPress && onPress(self);\n    },\n        _onRelease = function _onRelease(e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n\n      var wasDragging = self.isDragging && (Math.abs(self.x - self.startX) > 3 || Math.abs(self.y - self.startY) > 3),\n          // some touch devices need some wiggle room in terms of sensing clicks - the finger may move a few pixels.\n      eventData = _getEvent(e);\n\n      if (!wasDragging) {\n        self._vx.reset();\n\n        self._vy.reset();\n\n        if (preventDefault && allowClicks) {\n          gsap.delayedCall(0.08, function () {\n            // some browsers (like Firefox) won't trust script-generated clicks, so if the user tries to click on a video to play it, for example, it simply won't work. Since a regular \"click\" event will most likely be generated anyway (one that has its isTrusted flag set to true), we must slightly delay our script-generated click so that the \"real\"/trusted one is prioritized. Remember, when there are duplicate events in quick succession, we suppress all but the first one. Some browsers don't even trigger the \"real\" one at all, so our synthetic one is a safety valve that ensures that no matter what, a click event does get dispatched.\n            if (_getTime() - onClickTime > 300 && !e.defaultPrevented) {\n              if (e.target.click) {\n                //some browsers (like mobile Safari) don't properly trigger the click event\n                e.target.click();\n              } else if (ownerDoc.createEvent) {\n                var syntheticEvent = ownerDoc.createEvent(\"MouseEvents\");\n                syntheticEvent.initMouseEvent(\"click\", true, true, _win, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);\n                e.target.dispatchEvent(syntheticEvent);\n              }\n            }\n          });\n        }\n      }\n\n      self.isDragging = self.isGesturing = self.isPressed = false;\n      onStop && !isNormalizer && onStopDelayedCall.restart(true);\n      onDragEnd && wasDragging && onDragEnd(self);\n      onRelease && onRelease(self, wasDragging);\n    },\n        _onGestureStart = function _onGestureStart(e) {\n      return e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging);\n    },\n        _onGestureEnd = function _onGestureEnd() {\n      return (self.isGesturing = false) || onGestureEnd(self);\n    },\n        onScroll = function onScroll(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      var x = scrollFuncX(),\n          y = scrollFuncY();\n      onDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);\n      scrollX = x;\n      scrollY = y;\n      onStop && onStopDelayedCall.restart(true);\n    },\n        _onWheel = function _onWheel(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      e = _getEvent(e, preventDefault);\n      onWheel && (wheeled = true);\n      var multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;\n      onDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);\n      onStop && !isNormalizer && onStopDelayedCall.restart(true);\n    },\n        _onMove = function _onMove(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      var x = e.clientX,\n          y = e.clientY,\n          dx = x - self.x,\n          dy = y - self.y;\n      self.x = x;\n      self.y = y;\n      moved = true;\n      (dx || dy) && onTouchOrPointerDelta(dx, dy);\n    },\n        _onHover = function _onHover(e) {\n      self.event = e;\n      onHover(self);\n    },\n        _onHoverEnd = function _onHoverEnd(e) {\n      self.event = e;\n      onHoverEnd(self);\n    },\n        _onClick = function _onClick(e) {\n      return _ignoreCheck(e) || _getEvent(e, preventDefault) && onClick(self);\n    };\n\n    onStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();\n    self.deltaX = self.deltaY = 0;\n    self._vx = _getVelocityProp(0, 50, true);\n    self._vy = _getVelocityProp(0, 50, true);\n    self.scrollX = scrollFuncX;\n    self.scrollY = scrollFuncY;\n    self.isDragging = self.isGesturing = self.isPressed = false;\n\n    self.enable = function (e) {\n      if (!self.isEnabled) {\n        _addListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\n        type.indexOf(\"scroll\") >= 0 && _addListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, preventDefault, capture);\n        type.indexOf(\"wheel\") >= 0 && _addListener(target, \"wheel\", _onWheel, preventDefault, capture);\n\n        if (type.indexOf(\"touch\") >= 0 && _isTouch || type.indexOf(\"pointer\") >= 0) {\n          _addListener(target, _eventTypes[0], _onPress, preventDefault, capture);\n\n          _addListener(ownerDoc, _eventTypes[2], _onRelease);\n\n          _addListener(ownerDoc, _eventTypes[3], _onRelease);\n\n          allowClicks && _addListener(target, \"click\", clickCapture, false, true);\n          onClick && _addListener(target, \"click\", _onClick);\n          onGestureStart && _addListener(ownerDoc, \"gesturestart\", _onGestureStart);\n          onGestureEnd && _addListener(ownerDoc, \"gestureend\", _onGestureEnd);\n          onHover && _addListener(target, _pointerType + \"enter\", _onHover);\n          onHoverEnd && _addListener(target, _pointerType + \"leave\", _onHoverEnd);\n          onMove && _addListener(target, _pointerType + \"move\", _onMove);\n        }\n\n        self.isEnabled = true;\n        e && e.type && _onPress(e);\n        onEnable && onEnable(self);\n      }\n\n      return self;\n    };\n\n    self.disable = function () {\n      if (self.isEnabled) {\n        // only remove the _onScroll listener if there aren't any others that rely on the functionality.\n        _observers.filter(function (o) {\n          return o !== self && _isViewport(o.target);\n        }).length || _removeListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\n        if (self.isPressed) {\n          self._vx.reset();\n\n          self._vy.reset();\n\n          _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n        }\n\n        _removeListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, capture);\n\n        _removeListener(target, \"wheel\", _onWheel, capture);\n\n        _removeListener(target, _eventTypes[0], _onPress, capture);\n\n        _removeListener(ownerDoc, _eventTypes[2], _onRelease);\n\n        _removeListener(ownerDoc, _eventTypes[3], _onRelease);\n\n        _removeListener(target, \"click\", clickCapture, true);\n\n        _removeListener(target, \"click\", _onClick);\n\n        _removeListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\n        _removeListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\n        _removeListener(target, _pointerType + \"enter\", _onHover);\n\n        _removeListener(target, _pointerType + \"leave\", _onHoverEnd);\n\n        _removeListener(target, _pointerType + \"move\", _onMove);\n\n        self.isEnabled = self.isPressed = self.isDragging = false;\n        onDisable && onDisable(self);\n      }\n    };\n\n    self.kill = function () {\n      self.disable();\n\n      var i = _observers.indexOf(self);\n\n      i >= 0 && _observers.splice(i, 1);\n      _normalizer === self && (_normalizer = 0);\n    };\n\n    _observers.push(self);\n\n    isNormalizer && _isViewport(target) && (_normalizer = self);\n    self.enable(event);\n  };\n\n  _createClass(Observer, [{\n    key: \"velocityX\",\n    get: function get() {\n      return this._vx.getVelocity();\n    }\n  }, {\n    key: \"velocityY\",\n    get: function get() {\n      return this._vy.getVelocity();\n    }\n  }]);\n\n  return Observer;\n}();\nObserver.version = \"3.10.4\";\n\nObserver.create = function (vars) {\n  return new Observer(vars);\n};\n\nObserver.register = _initCore;\n\nObserver.getAll = function () {\n  return _observers.slice();\n};\n\nObserver.getById = function (id) {\n  return _observers.filter(function (o) {\n    return o.vars.id === id;\n  })[0];\n};\n\n_getGSAP() && gsap.registerPlugin(Observer);\nexport { Observer as default, _isViewport, _scrollers, _getScrollFunc, _getProxyProp, _proxies, _getVelocityProp, _vertical, _horizontal, _getTarget };","/*!\n * ScrollTrigger 3.10.4\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nimport { Observer, _getTarget, _vertical, _horizontal, _scrollers, _proxies, _getScrollFunc, _getProxyProp, _getVelocityProp } from \"./Observer.js\";\n\nvar gsap,\n    _coreInitted,\n    _win,\n    _doc,\n    _docEl,\n    _body,\n    _root,\n    _resizeDelay,\n    _toArray,\n    _clamp,\n    _time2,\n    _syncInterval,\n    _refreshing,\n    _pointerIsDown,\n    _transformProp,\n    _i,\n    _prevWidth,\n    _prevHeight,\n    _autoRefresh,\n    _sort,\n    _suppressOverwrites,\n    _ignoreResize,\n    _normalizer,\n    _ignoreMobileResize,\n    _baseScreenHeight,\n    _baseScreenWidth,\n    _fixIOSBug,\n    _limitCallbacks,\n    // if true, we'll only trigger callbacks if the active state toggles, so if you scroll immediately past both the start and end positions of a ScrollTrigger (thus inactive to inactive), neither its onEnter nor onLeave will be called. This is useful during startup.\n_startup = 1,\n    _getTime = Date.now,\n    _time1 = _getTime(),\n    _lastScrollTime = 0,\n    _enabled = 0,\n    _pointerDownHandler = function _pointerDownHandler() {\n  return _pointerIsDown = 1;\n},\n    _pointerUpHandler = function _pointerUpHandler() {\n  return _pointerIsDown = 0;\n},\n    _passThrough = function _passThrough(v) {\n  return v;\n},\n    _round = function _round(value) {\n  return Math.round(value * 100000) / 100000 || 0;\n},\n    _windowExists = function _windowExists() {\n  return typeof window !== \"undefined\";\n},\n    _getGSAP = function _getGSAP() {\n  return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _isViewport = function _isViewport(e) {\n  return !!~_root.indexOf(e);\n},\n    _getBoundsFunc = function _getBoundsFunc(element) {\n  return _getProxyProp(element, \"getBoundingClientRect\") || (_isViewport(element) ? function () {\n    _winOffsets.width = _win.innerWidth;\n    _winOffsets.height = _win.innerHeight;\n    return _winOffsets;\n  } : function () {\n    return _getBounds(element);\n  });\n},\n    _getSizeFunc = function _getSizeFunc(scroller, isViewport, _ref) {\n  var d = _ref.d,\n      d2 = _ref.d2,\n      a = _ref.a;\n  return (a = _getProxyProp(scroller, \"getBoundingClientRect\")) ? function () {\n    return a()[d];\n  } : function () {\n    return (isViewport ? _win[\"inner\" + d2] : scroller[\"client\" + d2]) || 0;\n  };\n},\n    _getOffsetsFunc = function _getOffsetsFunc(element, isViewport) {\n  return !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : function () {\n    return _winOffsets;\n  };\n},\n    _maxScroll = function _maxScroll(element, _ref2) {\n  var s = _ref2.s,\n      d2 = _ref2.d2,\n      d = _ref2.d,\n      a = _ref2.a;\n  return (s = \"scroll\" + d2) && (a = _getProxyProp(element, s)) ? a() - _getBoundsFunc(element)()[d] : _isViewport(element) ? (_docEl[s] || _body[s]) - (_win[\"inner\" + d2] || _docEl[\"client\" + d2] || _body[\"client\" + d2]) : element[s] - element[\"offset\" + d2];\n},\n    _iterateAutoRefresh = function _iterateAutoRefresh(func, events) {\n  for (var i = 0; i < _autoRefresh.length; i += 3) {\n    (!events || ~events.indexOf(_autoRefresh[i + 1])) && func(_autoRefresh[i], _autoRefresh[i + 1], _autoRefresh[i + 2]);\n  }\n},\n    _isString = function _isString(value) {\n  return typeof value === \"string\";\n},\n    _isFunction = function _isFunction(value) {\n  return typeof value === \"function\";\n},\n    _isNumber = function _isNumber(value) {\n  return typeof value === \"number\";\n},\n    _isObject = function _isObject(value) {\n  return typeof value === \"object\";\n},\n    _callIfFunc = function _callIfFunc(value) {\n  return _isFunction(value) && value();\n},\n    _combineFunc = function _combineFunc(f1, f2) {\n  return function () {\n    var result1 = _callIfFunc(f1),\n        result2 = _callIfFunc(f2);\n\n    return function () {\n      _callIfFunc(result1);\n\n      _callIfFunc(result2);\n    };\n  };\n},\n    _endAnimation = function _endAnimation(animation, reversed, pause) {\n  return animation && animation.progress(reversed ? 0 : 1) && pause && animation.pause();\n},\n    _callback = function _callback(self, func) {\n  if (self.enabled) {\n    var result = func(self);\n    result && result.totalTime && (self.callbackAnimation = result);\n  }\n},\n    _abs = Math.abs,\n    _scrollLeft = \"scrollLeft\",\n    _scrollTop = \"scrollTop\",\n    _left = \"left\",\n    _top = \"top\",\n    _right = \"right\",\n    _bottom = \"bottom\",\n    _width = \"width\",\n    _height = \"height\",\n    _Right = \"Right\",\n    _Left = \"Left\",\n    _Top = \"Top\",\n    _Bottom = \"Bottom\",\n    _padding = \"padding\",\n    _margin = \"margin\",\n    _Width = \"Width\",\n    _Height = \"Height\",\n    _px = \"px\",\n    _getComputedStyle = function _getComputedStyle(element) {\n  return _win.getComputedStyle(element);\n},\n    _makePositionable = function _makePositionable(element) {\n  // if the element already has position: absolute or fixed, leave that, otherwise make it position: relative\n  var position = _getComputedStyle(element).position;\n\n  element.style.position = position === \"absolute\" || position === \"fixed\" ? position : \"relative\";\n},\n    _setDefaults = function _setDefaults(obj, defaults) {\n  for (var p in defaults) {\n    p in obj || (obj[p] = defaults[p]);\n  }\n\n  return obj;\n},\n    _getBounds = function _getBounds(element, withoutTransforms) {\n  var tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {\n    x: 0,\n    y: 0,\n    xPercent: 0,\n    yPercent: 0,\n    rotation: 0,\n    rotationX: 0,\n    rotationY: 0,\n    scale: 1,\n    skewX: 0,\n    skewY: 0\n  }).progress(1),\n      bounds = element.getBoundingClientRect();\n  tween && tween.progress(0).kill();\n  return bounds;\n},\n    _getSize = function _getSize(element, _ref3) {\n  var d2 = _ref3.d2;\n  return element[\"offset\" + d2] || element[\"client\" + d2] || 0;\n},\n    _getLabelRatioArray = function _getLabelRatioArray(timeline) {\n  var a = [],\n      labels = timeline.labels,\n      duration = timeline.duration(),\n      p;\n\n  for (p in labels) {\n    a.push(labels[p] / duration);\n  }\n\n  return a;\n},\n    _getClosestLabel = function _getClosestLabel(animation) {\n  return function (value) {\n    return gsap.utils.snap(_getLabelRatioArray(animation), value);\n  };\n},\n    _snapDirectional = function _snapDirectional(snapIncrementOrArray) {\n  var snap = gsap.utils.snap(snapIncrementOrArray),\n      a = Array.isArray(snapIncrementOrArray) && snapIncrementOrArray.slice(0).sort(function (a, b) {\n    return a - b;\n  });\n  return a ? function (value, direction, threshold) {\n    if (threshold === void 0) {\n      threshold = 1e-3;\n    }\n\n    var i;\n\n    if (!direction) {\n      return snap(value);\n    }\n\n    if (direction > 0) {\n      value -= threshold; // to avoid rounding errors. If we're too strict, it might snap forward, then immediately again, and again.\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] >= value) {\n          return a[i];\n        }\n      }\n\n      return a[i - 1];\n    } else {\n      i = a.length;\n      value += threshold;\n\n      while (i--) {\n        if (a[i] <= value) {\n          return a[i];\n        }\n      }\n    }\n\n    return a[0];\n  } : function (value, direction, threshold) {\n    if (threshold === void 0) {\n      threshold = 1e-3;\n    }\n\n    var snapped = snap(value);\n    return !direction || Math.abs(snapped - value) < threshold || snapped - value < 0 === direction < 0 ? snapped : snap(direction < 0 ? value - snapIncrementOrArray : value + snapIncrementOrArray);\n  };\n},\n    _getLabelAtDirection = function _getLabelAtDirection(timeline) {\n  return function (value, st) {\n    return _snapDirectional(_getLabelRatioArray(timeline))(value, st.direction);\n  };\n},\n    _multiListener = function _multiListener(func, element, types, callback) {\n  return types.split(\",\").forEach(function (type) {\n    return func(element, type, callback);\n  });\n},\n    _addListener = function _addListener(element, type, func, nonPassive, capture) {\n  return element.addEventListener(type, func, {\n    passive: !nonPassive,\n    capture: !!capture\n  });\n},\n    _removeListener = function _removeListener(element, type, func, capture) {\n  return element.removeEventListener(type, func, !!capture);\n},\n    _wheelListener = function _wheelListener(func, el, scrollFunc) {\n  return scrollFunc && scrollFunc.wheelHandler && func(el, \"wheel\", scrollFunc);\n},\n    _markerDefaults = {\n  startColor: \"green\",\n  endColor: \"red\",\n  indent: 0,\n  fontSize: \"16px\",\n  fontWeight: \"normal\"\n},\n    _defaults = {\n  toggleActions: \"play\",\n  anticipatePin: 0\n},\n    _keywords = {\n  top: 0,\n  left: 0,\n  center: 0.5,\n  bottom: 1,\n  right: 1\n},\n    _offsetToPx = function _offsetToPx(value, size) {\n  if (_isString(value)) {\n    var eqIndex = value.indexOf(\"=\"),\n        relative = ~eqIndex ? +(value.charAt(eqIndex - 1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\n    if (~eqIndex) {\n      value.indexOf(\"%\") > eqIndex && (relative *= size / 100);\n      value = value.substr(0, eqIndex - 1);\n    }\n\n    value = relative + (value in _keywords ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n  }\n\n  return value;\n},\n    _createMarker = function _createMarker(type, name, container, direction, _ref4, offset, matchWidthEl, containerAnimation) {\n  var startColor = _ref4.startColor,\n      endColor = _ref4.endColor,\n      fontSize = _ref4.fontSize,\n      indent = _ref4.indent,\n      fontWeight = _ref4.fontWeight;\n\n  var e = _doc.createElement(\"div\"),\n      useFixedPosition = _isViewport(container) || _getProxyProp(container, \"pinType\") === \"fixed\",\n      isScroller = type.indexOf(\"scroller\") !== -1,\n      parent = useFixedPosition ? _body : container,\n      isStart = type.indexOf(\"start\") !== -1,\n      color = isStart ? startColor : endColor,\n      css = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\n  css += \"position:\" + ((isScroller || containerAnimation) && useFixedPosition ? \"fixed;\" : \"absolute;\");\n  (isScroller || containerAnimation || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n  matchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n  e._isStart = isStart;\n  e.setAttribute(\"class\", \"gsap-marker-\" + type + (name ? \" marker-\" + name : \"\"));\n  e.style.cssText = css;\n  e.innerText = name || name === 0 ? type + \"-\" + name : type;\n  parent.children[0] ? parent.insertBefore(e, parent.children[0]) : parent.appendChild(e);\n  e._offset = e[\"offset\" + direction.op.d2];\n\n  _positionMarker(e, 0, direction, isStart);\n\n  return e;\n},\n    _positionMarker = function _positionMarker(marker, start, direction, flipped) {\n  var vars = {\n    display: \"block\"\n  },\n      side = direction[flipped ? \"os2\" : \"p2\"],\n      oppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n  marker._isFlipped = flipped;\n  vars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n  vars[direction.a] = flipped ? \"1px\" : 0;\n  vars[\"border\" + side + _Width] = 1;\n  vars[\"border\" + oppositeSide + _Width] = 0;\n  vars[direction.p] = start + \"px\";\n  gsap.set(marker, vars);\n},\n    _triggers = [],\n    _ids = {},\n    _rafID,\n    _sync = function _sync() {\n  return _getTime() - _lastScrollTime > 34 && _updateAll();\n},\n    _onScroll = function _onScroll() {\n  // previously, we tried to optimize performance by batching/deferring to the next requestAnimationFrame(), but discovered that Safari has a few bugs that make this unworkable (especially on iOS). See https://codepen.io/GreenSock/pen/16c435b12ef09c38125204818e7b45fc?editors=0010 and https://codepen.io/GreenSock/pen/JjOxYpQ/3dd65ccec5a60f1d862c355d84d14562?editors=0010 and https://codepen.io/GreenSock/pen/ExbrPNa/087cef197dc35445a0951e8935c41503?editors=0010\n  if (!_normalizer || !_normalizer.isPressed || _normalizer.startX > _body.clientWidth) {\n    // if the user is dragging the scrollbar, allow it.\n    _scrollers.cache++;\n    _rafID || (_rafID = requestAnimationFrame(_updateAll));\n    _lastScrollTime || _dispatch(\"scrollStart\");\n    _lastScrollTime = _getTime();\n  }\n},\n    _setBaseDimensions = function _setBaseDimensions() {\n  _baseScreenWidth = _win.innerWidth;\n  _baseScreenHeight = _win.innerHeight;\n},\n    _onResize = function _onResize() {\n  _scrollers.cache++;\n  !_refreshing && !_ignoreResize && !_doc.fullscreenElement && !_doc.webkitFullscreenElement && (!_ignoreMobileResize || _baseScreenWidth !== _win.innerWidth || Math.abs(_win.innerHeight - _baseScreenHeight) > _win.innerHeight * 0.25) && _resizeDelay.restart(true);\n},\n    // ignore resizes triggered by refresh()\n_listeners = {},\n    _emptyArray = [],\n    _media = [],\n    _creatingMedia,\n    // when ScrollTrigger.matchMedia() is called, we record the current media key here (like \"(min-width: 800px)\") so that we can assign it to everything that's created during that call. Then we can revert just those when necessary. In the ScrollTrigger's init() call, the _creatingMedia is recorded as a \"media\" property on the instance.\n_lastMediaTick,\n    _onMediaChange = function _onMediaChange(e) {\n  var tick = gsap.ticker.frame,\n      matches = [],\n      i = 0,\n      index;\n\n  if (_lastMediaTick !== tick || _startup) {\n    _revertAll();\n\n    for (; i < _media.length; i += 4) {\n      index = _win.matchMedia(_media[i]).matches;\n\n      if (index !== _media[i + 3]) {\n        // note: some browsers fire the matchMedia event multiple times, like when going full screen, so we shouldn't call the function multiple times. Check to see if it's already matched.\n        _media[i + 3] = index;\n        index ? matches.push(i) : _revertAll(1, _media[i]) || _isFunction(_media[i + 2]) && _media[i + 2](); // Firefox doesn't update the \"matches\" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.\n      }\n    }\n\n    _revertRecorded(); // in case killing/reverting any of the animations actually added inline styles back.\n\n\n    for (i = 0; i < matches.length; i++) {\n      index = matches[i];\n      _creatingMedia = _media[index];\n      _media[index + 2] = _media[index + 1](e);\n    }\n\n    _creatingMedia = 0;\n    _coreInitted && _refreshAll(0, 1);\n    _lastMediaTick = tick;\n\n    _dispatch(\"matchMedia\");\n  }\n},\n    _softRefresh = function _softRefresh() {\n  return _removeListener(ScrollTrigger, \"scrollEnd\", _softRefresh) || _refreshAll(true);\n},\n    _dispatch = function _dispatch(type) {\n  return _listeners[type] && _listeners[type].map(function (f) {\n    return f();\n  }) || _emptyArray;\n},\n    _savedStyles = [],\n    // when ScrollTrigger.saveStyles() is called, the inline styles are recorded in this Array in a sequential format like [element, cssText, gsCache, media]. This keeps it very memory-efficient and fast to iterate through.\n_revertRecorded = function _revertRecorded(media) {\n  for (var i = 0; i < _savedStyles.length; i += 5) {\n    if (!media || _savedStyles[i + 4] === media) {\n      _savedStyles[i].style.cssText = _savedStyles[i + 1];\n      _savedStyles[i].getBBox && _savedStyles[i].setAttribute(\"transform\", _savedStyles[i + 2] || \"\");\n      _savedStyles[i + 3].uncache = 1;\n    }\n  }\n},\n    _revertAll = function _revertAll(kill, media) {\n  var trigger;\n\n  for (_i = 0; _i < _triggers.length; _i++) {\n    trigger = _triggers[_i];\n\n    if (!media || trigger.media === media) {\n      if (kill) {\n        trigger.kill(1);\n      } else {\n        trigger.revert();\n      }\n    }\n  }\n\n  media && _revertRecorded(media);\n  media || _dispatch(\"revert\");\n},\n    _clearScrollMemory = function _clearScrollMemory() {\n  return _scrollers.cache++ && _scrollers.forEach(function (obj) {\n    return typeof obj === \"function\" && (obj.rec = 0);\n  });\n},\n    // zero-out all the recorded scroll positions. Don't use _triggers because if, for example, .matchMedia() is used to create some ScrollTriggers and then the user resizes and it removes ALL ScrollTriggers, and then go back to a size where there are ScrollTriggers, it would have kept the position(s) saved from the initial state.\n_refreshingAll,\n    _refreshID = 0,\n    _refreshAll = function _refreshAll(force, skipRevert) {\n  if (_lastScrollTime && !force) {\n    _addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\n    return;\n  }\n\n  _refreshingAll = true;\n\n  var refreshInits = _dispatch(\"refreshInit\");\n\n  _sort && ScrollTrigger.sort();\n  skipRevert || _revertAll();\n\n  _triggers.slice(0).forEach(function (t) {\n    return t.refresh();\n  }); // don't loop with _i because during a refresh() someone could call ScrollTrigger.update() which would iterate through _i resulting in a skip.\n\n\n  _triggers.forEach(function (t) {\n    return t.vars.end === \"max\" && t.setPositions(t.start, _maxScroll(t.scroller, t._dir));\n  }); // the scroller's max scroll position may change after all the ScrollTriggers refreshed (like pinning could push it down), so we need to loop back and correct any with end: \"max\".\n\n\n  refreshInits.forEach(function (result) {\n    return result && result.render && result.render(-1);\n  }); // if the onRefreshInit() returns an animation (typically a gsap.set()), revert it. This makes it easy to put things in a certain spot before refreshing for measurement purposes, and then put things back.\n\n  _clearScrollMemory();\n\n  _resizeDelay.pause();\n\n  _refreshID++;\n  _refreshingAll = false;\n\n  _dispatch(\"refresh\");\n},\n    _lastScroll = 0,\n    _direction = 1,\n    _primary,\n    _updateAll = function _updateAll() {\n  if (!_refreshingAll) {\n    ScrollTrigger.isUpdating = true;\n    _primary && _primary.update(0); // ScrollSmoother users refreshPriority -9999 to become the primary that gets updated before all others because it affects the scroll position.\n\n    var l = _triggers.length,\n        time = _getTime(),\n        recordVelocity = time - _time1 >= 50,\n        scroll = l && _triggers[0].scroll();\n\n    _direction = _lastScroll > scroll ? -1 : 1;\n    _lastScroll = scroll;\n\n    if (recordVelocity) {\n      if (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n        _lastScrollTime = 0;\n\n        _dispatch(\"scrollEnd\");\n      }\n\n      _time2 = _time1;\n      _time1 = time;\n    }\n\n    if (_direction < 0) {\n      _i = l;\n\n      while (_i-- > 0) {\n        _triggers[_i] && _triggers[_i].update(0, recordVelocity);\n      }\n\n      _direction = 1;\n    } else {\n      for (_i = 0; _i < l; _i++) {\n        _triggers[_i] && _triggers[_i].update(0, recordVelocity);\n      }\n    }\n\n    ScrollTrigger.isUpdating = false;\n  }\n\n  _rafID = 0;\n},\n    _propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\", \"float\", \"zIndex\", \"gridColumnStart\", \"gridColumnEnd\", \"gridRowStart\", \"gridRowEnd\", \"gridArea\", \"justifySelf\", \"alignSelf\", \"placeSelf\", \"order\"],\n    _stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n    _swapPinOut = function _swapPinOut(pin, spacer, state) {\n  _setState(state);\n\n  var cache = pin._gsap;\n\n  if (cache.spacerIsNative) {\n    _setState(cache.spacerState);\n  } else if (pin.parentNode === spacer) {\n    var parent = spacer.parentNode;\n\n    if (parent) {\n      parent.insertBefore(pin, spacer);\n      parent.removeChild(spacer);\n    }\n  }\n},\n    _swapPinIn = function _swapPinIn(pin, spacer, cs, spacerState) {\n  if (pin.parentNode !== spacer) {\n    var i = _propNamesToCopy.length,\n        spacerStyle = spacer.style,\n        pinStyle = pin.style,\n        p;\n\n    while (i--) {\n      p = _propNamesToCopy[i];\n      spacerStyle[p] = cs[p];\n    }\n\n    spacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n    cs.display === \"inline\" && (spacerStyle.display = \"inline-block\");\n    pinStyle[_bottom] = pinStyle[_right] = spacerStyle.flexBasis = \"auto\";\n    spacerStyle.overflow = \"visible\";\n    spacerStyle.boxSizing = \"border-box\";\n    spacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n    spacerStyle[_height] = _getSize(pin, _vertical) + _px;\n    spacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\n    _setState(spacerState);\n\n    pinStyle[_width] = pinStyle[\"max\" + _Width] = cs[_width];\n    pinStyle[_height] = pinStyle[\"max\" + _Height] = cs[_height];\n    pinStyle[_padding] = cs[_padding];\n    pin.parentNode.insertBefore(spacer, pin);\n    spacer.appendChild(pin);\n  }\n},\n    _capsExp = /([A-Z])/g,\n    _setState = function _setState(state) {\n  if (state) {\n    var style = state.t.style,\n        l = state.length,\n        i = 0,\n        p,\n        value;\n    (state.t._gsap || gsap.core.getCache(state.t)).uncache = 1; // otherwise transforms may be off\n\n    for (; i < l; i += 2) {\n      value = state[i + 1];\n      p = state[i];\n\n      if (value) {\n        style[p] = value;\n      } else if (style[p]) {\n        style.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n      }\n    }\n  }\n},\n    _getState = function _getState(element) {\n  // returns an Array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n  var l = _stateProps.length,\n      style = element.style,\n      state = [],\n      i = 0;\n\n  for (; i < l; i++) {\n    state.push(_stateProps[i], style[_stateProps[i]]);\n  }\n\n  state.t = element;\n  return state;\n},\n    _copyState = function _copyState(state, override, omitOffsets) {\n  var result = [],\n      l = state.length,\n      i = omitOffsets ? 8 : 0,\n      // skip top, left, right, bottom if omitOffsets is true\n  p;\n\n  for (; i < l; i += 2) {\n    p = state[i];\n    result.push(p, p in override ? override[p] : state[i + 1]);\n  }\n\n  result.t = state.t;\n  return result;\n},\n    _winOffsets = {\n  left: 0,\n  top: 0\n},\n    // // potential future feature (?) Allow users to calculate where a trigger hits (scroll position) like getScrollPosition(\"#id\", \"top bottom\")\n// _getScrollPosition = (trigger, position, {scroller, containerAnimation, horizontal}) => {\n// \tscroller = _getTarget(scroller || _win);\n// \tlet direction = horizontal ? _horizontal : _vertical,\n// \t\tisViewport = _isViewport(scroller);\n// \t_getSizeFunc(scroller, isViewport, direction);\n// \treturn _parsePosition(position, _getTarget(trigger), _getSizeFunc(scroller, isViewport, direction)(), direction, _getScrollFunc(scroller, direction)(), 0, 0, 0, _getOffsetsFunc(scroller, isViewport)(), isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0, 0, containerAnimation ? containerAnimation.duration() : _maxScroll(scroller), containerAnimation);\n// },\n_parsePosition = function _parsePosition(value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, useFixedPosition, scrollerMax, containerAnimation) {\n  _isFunction(value) && (value = value(self));\n\n  if (_isString(value) && value.substr(0, 3) === \"max\") {\n    value = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n  }\n\n  var time = containerAnimation ? containerAnimation.time() : 0,\n      p1,\n      p2,\n      element;\n  containerAnimation && containerAnimation.seek(0);\n\n  if (!_isNumber(value)) {\n    _isFunction(trigger) && (trigger = trigger(self));\n    var offsets = value.split(\" \"),\n        bounds,\n        localOffset,\n        globalOffset,\n        display;\n    element = _getTarget(trigger) || _body;\n    bounds = _getBounds(element) || {};\n\n    if ((!bounds || !bounds.left && !bounds.top) && _getComputedStyle(element).display === \"none\") {\n      // if display is \"none\", it won't report getBoundingClientRect() properly\n      display = element.style.display;\n      element.style.display = \"block\";\n      bounds = _getBounds(element);\n      display ? element.style.display = display : element.style.removeProperty(\"display\");\n    }\n\n    localOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n    globalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n    value = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n    markerScroller && _positionMarker(markerScroller, globalOffset, direction, scrollerSize - globalOffset < 20 || markerScroller._isStart && globalOffset > 20);\n    scrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n  } else if (markerScroller) {\n    _positionMarker(markerScroller, scrollerSize, direction, true);\n  }\n\n  if (marker) {\n    var position = value + scrollerSize,\n        isStart = marker._isStart;\n    p1 = \"scroll\" + direction.d2;\n\n    _positionMarker(marker, position, direction, isStart && position > 20 || !isStart && (useFixedPosition ? Math.max(_body[p1], _docEl[p1]) : marker.parentNode[p1]) <= position + 1);\n\n    if (useFixedPosition) {\n      scrollerBounds = _getBounds(markerScroller);\n      useFixedPosition && (marker.style[direction.op.p] = scrollerBounds[direction.op.p] - direction.op.m - marker._offset + _px);\n    }\n  }\n\n  if (containerAnimation && element) {\n    p1 = _getBounds(element);\n    containerAnimation.seek(scrollerMax);\n    p2 = _getBounds(element);\n    containerAnimation._caScrollDist = p1[direction.p] - p2[direction.p];\n    value = value / containerAnimation._caScrollDist * scrollerMax;\n  }\n\n  containerAnimation && containerAnimation.seek(time);\n  return containerAnimation ? value : Math.round(value);\n},\n    _prefixExp = /(webkit|moz|length|cssText|inset)/i,\n    _reparent = function _reparent(element, parent, top, left) {\n  if (element.parentNode !== parent) {\n    var style = element.style,\n        p,\n        cs;\n\n    if (parent === _body) {\n      element._stOrig = style.cssText; // record original inline styles so we can revert them later\n\n      cs = _getComputedStyle(element);\n\n      for (p in cs) {\n        // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n        if (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n          style[p] = cs[p];\n        }\n      }\n\n      style.top = top;\n      style.left = left;\n    } else {\n      style.cssText = element._stOrig;\n    }\n\n    gsap.core.getCache(element).uncache = 1;\n    parent.appendChild(element);\n  }\n},\n    // _mergeAnimations = animations => {\n// \tlet tl = gsap.timeline({smoothChildTiming: true}).startTime(Math.min(...animations.map(a => a.globalTime(0))));\n// \tanimations.forEach(a => {let time = a.totalTime(); tl.add(a); a.totalTime(time); });\n// \ttl.smoothChildTiming = false;\n// \treturn tl;\n// },\n// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n_getTweenCreator = function _getTweenCreator(scroller, direction) {\n  var getScroll = _getScrollFunc(scroller, direction),\n      prop = \"_scroll\" + direction.p2,\n      // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n  lastScroll1,\n      lastScroll2,\n      getTween = function getTween(scrollTo, vars, initialValue, change1, change2) {\n    var tween = getTween.tween,\n        onComplete = vars.onComplete,\n        modifiers = {};\n    initialValue = initialValue || getScroll();\n    change2 = change1 && change2 || 0; // if change1 is 0, we set that to the difference and ignore change2. Otherwise, there would be a compound effect.\n\n    change1 = change1 || scrollTo - initialValue;\n    tween && tween.kill();\n    lastScroll1 = Math.round(initialValue);\n    vars[prop] = scrollTo;\n    vars.modifiers = modifiers;\n\n    modifiers[prop] = function (value) {\n      value = _round(getScroll()); // round because in some [very uncommon] Windows environments, it can get reported with decimals even though it was set without.\n\n      if (value !== lastScroll1 && value !== lastScroll2 && Math.abs(value - lastScroll1) > 2 && Math.abs(value - lastScroll2) > 2) {\n        // if the user scrolls, kill the tween. iOS Safari intermittently misreports the scroll position, it may be the most recently-set one or the one before that! When Safari is zoomed (CMD-+), it often misreports as 1 pixel off too! So if we set the scroll position to 125, for example, it'll actually report it as 124.\n        tween.kill();\n        getTween.tween = 0;\n      } else {\n        value = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;\n      }\n\n      lastScroll2 = lastScroll1;\n      return lastScroll1 = _round(value);\n    };\n\n    vars.onComplete = function () {\n      getTween.tween = 0;\n      onComplete && onComplete.call(tween);\n    };\n\n    tween = getTween.tween = gsap.to(scroller, vars);\n    return tween;\n  };\n\n  scroller[prop] = getScroll;\n\n  getScroll.wheelHandler = function () {\n    return getTween.tween && getTween.tween.kill() && (getTween.tween = 0);\n  };\n\n  _addListener(scroller, \"wheel\", getScroll.wheelHandler); // Windows machines handle mousewheel scrolling in chunks (like \"3 lines per scroll\") meaning the typical strategy for cancelling the scroll isn't as sensitive. It's much more likely to match one of the previous 2 scroll event positions. So we kill any snapping as soon as there's a wheel event.\n\n\n  return getTween;\n};\n\nexport var ScrollTrigger = /*#__PURE__*/function () {\n  function ScrollTrigger(vars, animation) {\n    _coreInitted || ScrollTrigger.register(gsap) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n    this.init(vars, animation);\n  }\n\n  var _proto = ScrollTrigger.prototype;\n\n  _proto.init = function init(vars, animation) {\n    this.progress = this.start = 0;\n    this.vars && this.kill(true, true); // in case it's being initted again\n\n    if (!_enabled) {\n      this.update = this.refresh = this.kill = _passThrough;\n      return;\n    }\n\n    vars = _setDefaults(_isString(vars) || _isNumber(vars) || vars.nodeType ? {\n      trigger: vars\n    } : vars, _defaults);\n\n    var _vars = vars,\n        onUpdate = _vars.onUpdate,\n        toggleClass = _vars.toggleClass,\n        id = _vars.id,\n        onToggle = _vars.onToggle,\n        onRefresh = _vars.onRefresh,\n        scrub = _vars.scrub,\n        trigger = _vars.trigger,\n        pin = _vars.pin,\n        pinSpacing = _vars.pinSpacing,\n        invalidateOnRefresh = _vars.invalidateOnRefresh,\n        anticipatePin = _vars.anticipatePin,\n        onScrubComplete = _vars.onScrubComplete,\n        onSnapComplete = _vars.onSnapComplete,\n        once = _vars.once,\n        snap = _vars.snap,\n        pinReparent = _vars.pinReparent,\n        pinSpacer = _vars.pinSpacer,\n        containerAnimation = _vars.containerAnimation,\n        fastScrollEnd = _vars.fastScrollEnd,\n        preventOverlaps = _vars.preventOverlaps,\n        direction = vars.horizontal || vars.containerAnimation && vars.horizontal !== false ? _horizontal : _vertical,\n        isToggle = !scrub && scrub !== 0,\n        scroller = _getTarget(vars.scroller || _win),\n        scrollerCache = gsap.core.getCache(scroller),\n        isViewport = _isViewport(scroller),\n        useFixedPosition = (\"pinType\" in vars ? vars.pinType : _getProxyProp(scroller, \"pinType\") || isViewport && \"fixed\") === \"fixed\",\n        callbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n        toggleActions = isToggle && vars.toggleActions.split(\" \"),\n        markers = \"markers\" in vars ? vars.markers : _defaults.markers,\n        borderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n        self = this,\n        onRefreshInit = vars.onRefreshInit && function () {\n      return vars.onRefreshInit(self);\n    },\n        getScrollerSize = _getSizeFunc(scroller, isViewport, direction),\n        getScrollerOffsets = _getOffsetsFunc(scroller, isViewport),\n        lastSnap = 0,\n        lastRefresh = 0,\n        scrollFunc = _getScrollFunc(scroller, direction),\n        tweenTo,\n        pinCache,\n        snapFunc,\n        scroll1,\n        scroll2,\n        start,\n        end,\n        markerStart,\n        markerEnd,\n        markerStartTrigger,\n        markerEndTrigger,\n        markerVars,\n        change,\n        pinOriginalState,\n        pinActiveState,\n        pinState,\n        spacer,\n        offset,\n        pinGetter,\n        pinSetter,\n        pinStart,\n        pinChange,\n        spacingStart,\n        spacerState,\n        markerStartSetter,\n        markerEndSetter,\n        cs,\n        snap1,\n        snap2,\n        scrubTween,\n        scrubSmooth,\n        snapDurClamp,\n        snapDelayedCall,\n        prevProgress,\n        prevScroll,\n        prevAnimProgress,\n        caMarkerSetter,\n        customRevertReturn;\n\n    self.media = _creatingMedia;\n    self._dir = direction;\n    anticipatePin *= 45;\n    self.scroller = scroller;\n    self.scroll = containerAnimation ? containerAnimation.time.bind(containerAnimation) : scrollFunc;\n    scroll1 = scrollFunc();\n    self.vars = vars;\n    animation = animation || vars.animation;\n\n    if (\"refreshPriority\" in vars) {\n      _sort = 1;\n      vars.refreshPriority === -9999 && (_primary = self); // used by ScrollSmoother\n    }\n\n    scrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n      top: _getTweenCreator(scroller, _vertical),\n      left: _getTweenCreator(scroller, _horizontal)\n    };\n    self.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\n    self.scrubDuration = function (value) {\n      scrubSmooth = _isNumber(value) && value;\n\n      if (!scrubSmooth) {\n        scrubTween && scrubTween.progress(1).kill();\n        scrubTween = 0;\n      } else {\n        scrubTween ? scrubTween.duration(value) : scrubTween = gsap.to(animation, {\n          ease: \"expo\",\n          totalProgress: \"+=0.001\",\n          duration: scrubSmooth,\n          paused: true,\n          onComplete: function onComplete() {\n            return onScrubComplete && onScrubComplete(self);\n          }\n        });\n      }\n    };\n\n    if (animation) {\n      animation.vars.lazy = false;\n      animation._initted || animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.render(0, true, true);\n      self.animation = animation.pause();\n      animation.scrollTrigger = self;\n      self.scrubDuration(scrub);\n      snap1 = 0;\n      id || (id = animation.vars.id);\n    }\n\n    _triggers.push(self);\n\n    if (snap) {\n      if (!_isObject(snap) || snap.push) {\n        snap = {\n          snapTo: snap\n        };\n      }\n\n      \"scrollBehavior\" in _body.style && gsap.set(isViewport ? [_body, _docEl] : scroller, {\n        scrollBehavior: \"auto\"\n      }); // smooth scrolling doesn't work with snap.\n\n      snapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getClosestLabel(animation) : snap.snapTo === \"labelsDirectional\" ? _getLabelAtDirection(animation) : snap.directional !== false ? function (value, st) {\n        return _snapDirectional(snap.snapTo)(value, _getTime() - lastRefresh < 500 ? 0 : st.direction);\n      } : gsap.utils.snap(snap.snapTo);\n      snapDurClamp = snap.duration || {\n        min: 0.1,\n        max: 2\n      };\n      snapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n      snapDelayedCall = gsap.delayedCall(snap.delay || scrubSmooth / 2 || 0.1, function () {\n        var scroll = scrollFunc(),\n            refreshedRecently = _getTime() - lastRefresh < 500,\n            tween = tweenTo.tween;\n\n        if ((refreshedRecently || Math.abs(self.getVelocity()) < 10) && !tween && !_pointerIsDown && lastSnap !== scroll) {\n          var progress = (scroll - start) / change,\n              totalProgress = animation && !isToggle ? animation.totalProgress() : progress,\n              velocity = refreshedRecently ? 0 : (totalProgress - snap2) / (_getTime() - _time2) * 1000 || 0,\n              change1 = gsap.utils.clamp(-progress, 1 - progress, _abs(velocity / 2) * velocity / 0.185),\n              naturalEnd = progress + (snap.inertia === false ? 0 : change1),\n              endValue = _clamp(0, 1, snapFunc(naturalEnd, self)),\n              endScroll = Math.round(start + endValue * change),\n              _snap = snap,\n              onStart = _snap.onStart,\n              _onInterrupt = _snap.onInterrupt,\n              _onComplete = _snap.onComplete;\n\n          if (scroll <= end && scroll >= start && endScroll !== scroll) {\n            if (tween && !tween._initted && tween.data <= _abs(endScroll - scroll)) {\n              // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n              return;\n            }\n\n            if (snap.inertia === false) {\n              change1 = endValue - progress;\n            }\n\n            tweenTo(endScroll, {\n              duration: snapDurClamp(_abs(Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05 || 0)),\n              ease: snap.ease || \"power3\",\n              data: _abs(endScroll - scroll),\n              // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n              onInterrupt: function onInterrupt() {\n                return snapDelayedCall.restart(true) && _onInterrupt && _onInterrupt(self);\n              },\n              onComplete: function onComplete() {\n                self.update();\n                lastSnap = scrollFunc();\n                snap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n                onSnapComplete && onSnapComplete(self);\n                _onComplete && _onComplete(self);\n              }\n            }, scroll, change1 * change, endScroll - scroll - change1 * change);\n            onStart && onStart(self, tweenTo.tween);\n          }\n        } else if (self.isActive && lastSnap !== scroll) {\n          snapDelayedCall.restart(true);\n        }\n      }).pause();\n    }\n\n    id && (_ids[id] = self);\n    trigger = self.trigger = _getTarget(trigger || pin); // if a trigger has some kind of scroll-related effect applied that could contaminate the \"y\" or \"x\" position (like a ScrollSmoother effect), we needed a way to temporarily revert it, so we use the stRevert property of the gsCache. It can return another function that we'll call at the end so it can return to its normal state.\n\n    customRevertReturn = trigger && trigger._gsap && trigger._gsap.stRevert;\n    customRevertReturn && (customRevertReturn = customRevertReturn(self));\n    pin = pin === true ? trigger : _getTarget(pin);\n    _isString(toggleClass) && (toggleClass = {\n      targets: trigger,\n      className: toggleClass\n    });\n\n    if (pin) {\n      pinSpacing === false || pinSpacing === _margin || (pinSpacing = !pinSpacing && _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default.\n\n      self.pin = pin;\n      vars.force3D !== false && gsap.set(pin, {\n        force3D: true\n      });\n      pinCache = gsap.core.getCache(pin);\n\n      if (!pinCache.spacer) {\n        // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n        if (pinSpacer) {\n          pinSpacer = _getTarget(pinSpacer);\n          pinSpacer && !pinSpacer.nodeType && (pinSpacer = pinSpacer.current || pinSpacer.nativeElement); // for React & Angular\n\n          pinCache.spacerIsNative = !!pinSpacer;\n          pinSpacer && (pinCache.spacerState = _getState(pinSpacer));\n        }\n\n        pinCache.spacer = spacer = pinSpacer || _doc.createElement(\"div\");\n        spacer.classList.add(\"pin-spacer\");\n        id && spacer.classList.add(\"pin-spacer-\" + id);\n        pinCache.pinState = pinOriginalState = _getState(pin);\n      } else {\n        pinOriginalState = pinCache.pinState;\n      }\n\n      self.spacer = spacer = pinCache.spacer;\n      cs = _getComputedStyle(pin);\n      spacingStart = cs[pinSpacing + direction.os2];\n      pinGetter = gsap.getProperty(pin);\n      pinSetter = gsap.quickSetter(pin, direction.a, _px); // pin.firstChild && !_maxScroll(pin, direction) && (pin.style.overflow = \"hidden\"); // protects from collapsing margins, but can have unintended consequences as demonstrated here: https://codepen.io/GreenSock/pen/1e42c7a73bfa409d2cf1e184e7a4248d so it was removed in favor of just telling people to set up their CSS to avoid the collapsing margins (overflow: hidden | auto is just one option. Another is border-top: 1px solid transparent).\n\n      _swapPinIn(pin, spacer, cs);\n\n      pinState = _getState(pin);\n    }\n\n    if (markers) {\n      markerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n      markerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n      markerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n      offset = markerStartTrigger[\"offset\" + direction.op.d2];\n\n      var content = _getTarget(_getProxyProp(scroller, \"content\") || scroller);\n\n      markerStart = this.markerStart = _createMarker(\"start\", id, content, direction, markerVars, offset, 0, containerAnimation);\n      markerEnd = this.markerEnd = _createMarker(\"end\", id, content, direction, markerVars, offset, 0, containerAnimation);\n      containerAnimation && (caMarkerSetter = gsap.quickSetter([markerStart, markerEnd], direction.a, _px));\n\n      if (!useFixedPosition && !(_proxies.length && _getProxyProp(scroller, \"fixedMarkers\") === true)) {\n        _makePositionable(isViewport ? _body : scroller);\n\n        gsap.set([markerStartTrigger, markerEndTrigger], {\n          force3D: true\n        });\n        markerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n        markerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n      }\n    }\n\n    if (containerAnimation) {\n      var oldOnUpdate = containerAnimation.vars.onUpdate,\n          oldParams = containerAnimation.vars.onUpdateParams;\n      containerAnimation.eventCallback(\"onUpdate\", function () {\n        self.update(0, 0, 1);\n        oldOnUpdate && oldOnUpdate.apply(oldParams || []);\n      });\n    }\n\n    self.previous = function () {\n      return _triggers[_triggers.indexOf(self) - 1];\n    };\n\n    self.next = function () {\n      return _triggers[_triggers.indexOf(self) + 1];\n    };\n\n    self.revert = function (revert) {\n      var r = revert !== false || !self.enabled,\n          prevRefreshing = _refreshing;\n\n      if (r !== self.isReverted) {\n        if (r) {\n          self.scroll.rec || !_refreshing || !_refreshingAll || (self.scroll.rec = scrollFunc());\n          prevScroll = Math.max(scrollFunc(), self.scroll.rec || 0); // record the scroll so we can revert later (repositioning/pinning things can affect scroll position). In the static refresh() method, we first record all the scroll positions as a reference.\n\n          prevProgress = self.progress;\n          prevAnimProgress = animation && animation.progress();\n        }\n\n        markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function (m) {\n          return m.style.display = r ? \"none\" : \"block\";\n        });\n        r && (_refreshing = 1);\n        self.update(r); // make sure the pin is back in its original position so that all the measurements are correct.\n\n        _refreshing = prevRefreshing;\n        pin && (r ? _swapPinOut(pin, spacer, pinOriginalState) : (!pinReparent || !self.isActive) && _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState));\n        self.isReverted = r;\n      }\n    };\n\n    self.refresh = function (soft, force) {\n      if ((_refreshing || !self.enabled) && !force) {\n        return;\n      }\n\n      if (pin && soft && _lastScrollTime) {\n        _addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\n        return;\n      }\n\n      !_refreshingAll && onRefreshInit && onRefreshInit(self);\n      _refreshing = 1;\n      lastRefresh = _getTime();\n\n      if (tweenTo.tween) {\n        tweenTo.tween.kill();\n        tweenTo.tween = 0;\n      }\n\n      scrubTween && scrubTween.pause();\n      invalidateOnRefresh && animation && animation.time(-0.01, true).invalidate();\n      self.isReverted || self.revert();\n\n      var size = getScrollerSize(),\n          scrollerBounds = getScrollerOffsets(),\n          max = containerAnimation ? containerAnimation.duration() : _maxScroll(scroller, direction),\n          offset = 0,\n          otherPinOffset = 0,\n          parsedEnd = vars.end,\n          parsedEndTrigger = vars.endTrigger || trigger,\n          parsedStart = vars.start || (vars.start === 0 || !trigger ? 0 : pin ? \"0 0\" : \"0 100%\"),\n          pinnedContainer = self.pinnedContainer = vars.pinnedContainer && _getTarget(vars.pinnedContainer),\n          triggerIndex = trigger && Math.max(0, _triggers.indexOf(self)) || 0,\n          i = triggerIndex,\n          cs,\n          bounds,\n          scroll,\n          isVertical,\n          override,\n          curTrigger,\n          curPin,\n          oppositeScroll,\n          initted,\n          revertedPins;\n\n      while (i--) {\n        // user might try to pin the same element more than once, so we must find any prior triggers with the same pin, revert them, and determine how long they're pinning so that we can offset things appropriately. Make sure we revert from last to first so that things \"rewind\" properly.\n        curTrigger = _triggers[i];\n        curTrigger.end || curTrigger.refresh(0, 1) || (_refreshing = 1); // if it's a timeline-based trigger that hasn't been fully initialized yet because it's waiting for 1 tick, just force the refresh() here, otherwise if it contains a pin that's supposed to affect other ScrollTriggers further down the page, they won't be adjusted properly.\n\n        curPin = curTrigger.pin;\n\n        if (curPin && (curPin === trigger || curPin === pin) && !curTrigger.isReverted) {\n          revertedPins || (revertedPins = []);\n          revertedPins.unshift(curTrigger); // we'll revert from first to last to make sure things reach their end state properly\n\n          curTrigger.revert();\n        }\n\n        if (curTrigger !== _triggers[i]) {\n          // in case it got removed.\n          triggerIndex--;\n          i--;\n        }\n      }\n\n      _isFunction(parsedStart) && (parsedStart = parsedStart(self));\n      start = _parsePosition(parsedStart, trigger, size, direction, scrollFunc(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation) || (pin ? -0.001 : 0);\n      _isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\n      if (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n        if (~parsedEnd.indexOf(\" \")) {\n          parsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n        } else {\n          offset = _offsetToPx(parsedEnd.substr(2), size);\n          parsedEnd = _isString(parsedStart) ? parsedStart : start + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\n          parsedEndTrigger = trigger;\n        }\n      }\n\n      end = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, scrollFunc() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation)) || -0.001;\n      change = end - start || (start -= 0.01) && 0.001;\n      offset = 0;\n      i = triggerIndex;\n\n      while (i--) {\n        curTrigger = _triggers[i];\n        curPin = curTrigger.pin;\n\n        if (curPin && curTrigger.start - curTrigger._pinPush < start && !containerAnimation && curTrigger.end > 0) {\n          cs = curTrigger.end - curTrigger.start;\n\n          if ((curPin === trigger || curPin === pinnedContainer) && !_isNumber(parsedStart)) {\n            // numeric start values shouldn't be offset at all - treat them as absolute\n            offset += cs * (1 - curTrigger.progress);\n          }\n\n          curPin === pin && (otherPinOffset += cs);\n        }\n      }\n\n      start += offset;\n      end += offset;\n      self._pinPush = otherPinOffset;\n\n      if (markerStart && offset) {\n        // offset the markers if necessary\n        cs = {};\n        cs[direction.a] = \"+=\" + offset;\n        pinnedContainer && (cs[direction.p] = \"-=\" + scrollFunc());\n        gsap.set([markerStart, markerEnd], cs);\n      }\n\n      if (pin) {\n        cs = _getComputedStyle(pin);\n        isVertical = direction === _vertical;\n        scroll = scrollFunc(); // recalculate because the triggers can affect the scroll\n\n        pinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;\n        !max && end > 1 && ((isViewport ? _body : scroller).style[\"overflow-\" + direction.a] = \"scroll\"); // makes sure the scroller has a scrollbar, otherwise if something has width: 100%, for example, it would be too big (exclude the scrollbar). See https://greensock.com/forums/topic/25182-scrolltrigger-width-of-page-increase-where-markers-are-set-to-false/\n\n        _swapPinIn(pin, spacer, cs);\n\n        pinState = _getState(pin); // transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\n        bounds = _getBounds(pin, true);\n        oppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();\n\n        if (pinSpacing) {\n          spacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];\n          spacerState.t = spacer;\n          i = pinSpacing === _padding ? _getSize(pin, direction) + change + otherPinOffset : 0;\n          i && spacerState.push(direction.d, i + _px); // for box-sizing: border-box (must include padding).\n\n          _setState(spacerState);\n\n          useFixedPosition && scrollFunc(prevScroll);\n        }\n\n        if (useFixedPosition) {\n          override = {\n            top: bounds.top + (isVertical ? scroll - start : oppositeScroll) + _px,\n            left: bounds.left + (isVertical ? oppositeScroll : scroll - start) + _px,\n            boxSizing: \"border-box\",\n            position: \"fixed\"\n          };\n          override[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n          override[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n          override[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n          override[_padding] = cs[_padding];\n          override[_padding + _Top] = cs[_padding + _Top];\n          override[_padding + _Right] = cs[_padding + _Right];\n          override[_padding + _Bottom] = cs[_padding + _Bottom];\n          override[_padding + _Left] = cs[_padding + _Left];\n          pinActiveState = _copyState(pinOriginalState, override, pinReparent);\n        }\n\n        if (animation) {\n          // the animation might be affecting the transform, so we must jump to the end, check the value, and compensate accordingly. Otherwise, when it becomes unpinned, the pinSetter() will get set to a value that doesn't include whatever the animation did.\n          initted = animation._initted; // if not, we must invalidate() after this step, otherwise it could lock in starting values prematurely.\n\n          _suppressOverwrites(1);\n\n          animation.render(animation.duration(), true, true);\n          pinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;\n          change !== pinChange && useFixedPosition && pinActiveState.splice(pinActiveState.length - 2, 2); // transform is the last property/value set in the state Array. Since the animation is controlling that, we should omit it.\n\n          animation.render(0, true, true);\n          initted || animation.invalidate();\n\n          _suppressOverwrites(0);\n        } else {\n          pinChange = change;\n        }\n      } else if (trigger && scrollFunc() && !containerAnimation) {\n        // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n        bounds = trigger.parentNode;\n\n        while (bounds && bounds !== _body) {\n          if (bounds._pinOffset) {\n            start -= bounds._pinOffset;\n            end -= bounds._pinOffset;\n          }\n\n          bounds = bounds.parentNode;\n        }\n      }\n\n      revertedPins && revertedPins.forEach(function (t) {\n        return t.revert(false);\n      });\n      self.start = start;\n      self.end = end;\n      scroll1 = scroll2 = scrollFunc(); // reset velocity\n\n      if (!containerAnimation) {\n        scroll1 < prevScroll && scrollFunc(prevScroll);\n        self.scroll.rec = 0;\n      }\n\n      self.revert(false);\n\n      if (snapDelayedCall) {\n        lastSnap = -1;\n        self.isActive && scrollFunc(start + change * prevProgress); // just so snapping gets re-enabled, clear out any recorded last value\n\n        snapDelayedCall.restart(true);\n      }\n\n      _refreshing = 0;\n      animation && isToggle && (animation._initted || prevAnimProgress) && animation.progress() !== prevAnimProgress && animation.progress(prevAnimProgress, true).render(animation.time(), true, true); // must force a re-render because if saveStyles() was used on the target(s), the styles could have been wiped out during the refresh().\n\n      if (prevProgress !== self.progress || containerAnimation) {\n        // ensures that the direction is set properly (when refreshing, progress is set back to 0 initially, then back again to wherever it needs to be) and that callbacks are triggered.\n        animation && !isToggle && animation.totalProgress(prevProgress, true); // to avoid issues where animation callbacks like onStart aren't triggered.\n\n        self.progress = prevProgress;\n        self.update(0, 0, 1);\n      }\n\n      pin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * pinChange)); //\t\t\tscrubTween && scrubTween.invalidate();\n\n      onRefresh && onRefresh(self);\n    };\n\n    self.getVelocity = function () {\n      return (scrollFunc() - scroll2) / (_getTime() - _time2) * 1000 || 0;\n    };\n\n    self.endAnimation = function () {\n      _endAnimation(self.callbackAnimation);\n\n      if (animation) {\n        scrubTween ? scrubTween.progress(1) : !animation.paused() ? _endAnimation(animation, animation.reversed()) : isToggle || _endAnimation(animation, self.direction < 0, 1);\n      }\n    };\n\n    self.labelToScroll = function (label) {\n      return animation && animation.labels && (start || self.refresh() || start) + animation.labels[label] / animation.duration() * change || 0;\n    };\n\n    self.getTrailing = function (name) {\n      var i = _triggers.indexOf(self),\n          a = self.direction > 0 ? _triggers.slice(0, i).reverse() : _triggers.slice(i + 1);\n\n      return (_isString(name) ? a.filter(function (t) {\n        return t.vars.preventOverlaps === name;\n      }) : a).filter(function (t) {\n        return self.direction > 0 ? t.end <= start : t.start >= end;\n      });\n    };\n\n    self.update = function (reset, recordVelocity, forceFake) {\n      if (containerAnimation && !forceFake && !reset) {\n        return;\n      }\n\n      var scroll = self.scroll(),\n          p = reset ? 0 : (scroll - start) / change,\n          clipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n          prevProgress = self.progress,\n          isActive,\n          wasActive,\n          toggleState,\n          action,\n          stateChanged,\n          toggled,\n          isAtMax,\n          isTakingAction;\n\n      if (recordVelocity) {\n        scroll2 = scroll1;\n        scroll1 = containerAnimation ? scrollFunc() : scroll;\n\n        if (snap) {\n          snap2 = snap1;\n          snap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n        }\n      } // anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\n\n      anticipatePin && !clipped && pin && !_refreshing && !_startup && _lastScrollTime && start < scroll + (scroll - scroll2) / (_getTime() - _time2) * anticipatePin && (clipped = 0.0001);\n\n      if (clipped !== prevProgress && self.enabled) {\n        isActive = self.isActive = !!clipped && clipped < 1;\n        wasActive = !!prevProgress && prevProgress < 1;\n        toggled = isActive !== wasActive;\n        stateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\n        self.direction = clipped > prevProgress ? 1 : -1;\n        self.progress = clipped;\n\n        if (stateChanged && !_refreshing) {\n          toggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack (we prioritize the FIRST encounter, thus if you scroll really fast past the onEnter and onLeave in one tick, it'd prioritize onEnter.\n\n          if (isToggle) {\n            action = !toggled && toggleActions[toggleState + 1] !== \"none\" && toggleActions[toggleState + 1] || toggleActions[toggleState]; // if it didn't toggle, that means it shot right past and since we prioritize the \"enter\" action, we should switch to the \"leave\" in this case (but only if one is defined)\n\n            isTakingAction = animation && (action === \"complete\" || action === \"reset\" || action in animation);\n          }\n        }\n\n        preventOverlaps && (toggled || isTakingAction) && (isTakingAction || scrub || !animation) && (_isFunction(preventOverlaps) ? preventOverlaps(self) : self.getTrailing(preventOverlaps).forEach(function (t) {\n          return t.endAnimation();\n        }));\n\n        if (!isToggle) {\n          if (scrubTween && !_refreshing && !_startup) {\n            (containerAnimation || _primary && _primary !== self) && scrubTween.render(scrubTween._dp._time - scrubTween._start); // if there's a scrub on both the container animation and this one (or a ScrollSmoother), the update order would cause this one not to have rendered yet, so it wouldn't make any progress before we .restart() it heading toward the new progress so it'd appear stuck thus we force a render here.\n\n            if (scrubTween.resetTo) {\n              scrubTween.resetTo(\"totalProgress\", clipped, animation._tTime / animation._tDur);\n            } else {\n              // legacy support (courtesy), before 3.10.0\n              scrubTween.vars.totalProgress = clipped;\n              scrubTween.invalidate().restart();\n            }\n          } else if (animation) {\n            animation.totalProgress(clipped, !!_refreshing);\n          }\n        }\n\n        if (pin) {\n          reset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\n          if (!useFixedPosition) {\n            pinSetter(_round(pinStart + pinChange * clipped));\n          } else if (stateChanged) {\n            isAtMax = !reset && clipped > prevProgress && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\n            if (pinReparent) {\n              if (!reset && (isActive || isAtMax)) {\n                var bounds = _getBounds(pin, true),\n                    _offset = scroll - start;\n\n                _reparent(pin, _body, bounds.top + (direction === _vertical ? _offset : 0) + _px, bounds.left + (direction === _vertical ? 0 : _offset) + _px);\n              } else {\n                _reparent(pin, spacer);\n              }\n            }\n\n            _setState(isActive || isAtMax ? pinActiveState : pinState);\n\n            pinChange !== change && clipped < 1 && isActive || pinSetter(pinStart + (clipped === 1 && !isAtMax ? pinChange : 0));\n          }\n        }\n\n        snap && !tweenTo.tween && !_refreshing && !_startup && snapDelayedCall.restart(true);\n        toggleClass && (toggled || once && clipped && (clipped < 1 || !_limitCallbacks)) && _toArray(toggleClass.targets).forEach(function (el) {\n          return el.classList[isActive || once ? \"add\" : \"remove\"](toggleClass.className);\n        }); // classes could affect positioning, so do it even if reset or refreshing is true.\n\n        onUpdate && !isToggle && !reset && onUpdate(self);\n\n        if (stateChanged && !_refreshing) {\n          if (isToggle) {\n            if (isTakingAction) {\n              if (action === \"complete\") {\n                animation.pause().totalProgress(1);\n              } else if (action === \"reset\") {\n                animation.restart(true).pause();\n              } else if (action === \"restart\") {\n                animation.restart(true);\n              } else {\n                animation[action]();\n              }\n            }\n\n            onUpdate && onUpdate(self);\n          }\n\n          if (toggled || !_limitCallbacks) {\n            // on startup, the page could be scrolled and we don't want to fire callbacks that didn't toggle. For example onEnter shouldn't fire if the ScrollTrigger isn't actually entered.\n            onToggle && toggled && _callback(self, onToggle);\n            callbacks[toggleState] && _callback(self, callbacks[toggleState]);\n            once && (clipped === 1 ? self.kill(false, 1) : callbacks[toggleState] = 0); // a callback shouldn't be called again if once is true.\n\n            if (!toggled) {\n              // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n              toggleState = clipped === 1 ? 1 : 3;\n              callbacks[toggleState] && _callback(self, callbacks[toggleState]);\n            }\n          }\n\n          if (fastScrollEnd && !isActive && Math.abs(self.getVelocity()) > (_isNumber(fastScrollEnd) ? fastScrollEnd : 2500)) {\n            _endAnimation(self.callbackAnimation);\n\n            scrubTween ? scrubTween.progress(1) : _endAnimation(animation, !clipped, 1);\n          }\n        } else if (isToggle && onUpdate && !_refreshing) {\n          onUpdate(self);\n        }\n      } // update absolutely-positioned markers (only if the scroller isn't the viewport)\n\n\n      if (markerEndSetter) {\n        var n = containerAnimation ? scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0) : scroll;\n        markerStartSetter(n + (markerStartTrigger._isFlipped ? 1 : 0));\n        markerEndSetter(n);\n      }\n\n      caMarkerSetter && caMarkerSetter(-scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0));\n    };\n\n    self.enable = function (reset, refresh) {\n      if (!self.enabled) {\n        self.enabled = true;\n\n        _addListener(scroller, \"resize\", _onResize);\n\n        _addListener(isViewport ? _doc : scroller, \"scroll\", _onScroll);\n\n        onRefreshInit && _addListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\n        if (reset !== false) {\n          self.progress = prevProgress = 0;\n          scroll1 = scroll2 = lastSnap = scrollFunc();\n        }\n\n        refresh !== false && self.refresh();\n      }\n    };\n\n    self.getTween = function (snap) {\n      return snap && tweenTo ? tweenTo.tween : scrubTween;\n    };\n\n    self.setPositions = function (newStart, newEnd) {\n      // doesn't persist after refresh()! Intended to be a way to override values that were set during refresh(), like you could set it in onRefresh()\n      if (pin) {\n        pinStart += newStart - start;\n        pinChange += newEnd - newStart - change;\n      }\n\n      self.start = start = newStart;\n      self.end = end = newEnd;\n      change = newEnd - newStart;\n      self.update();\n    };\n\n    self.disable = function (reset, allowAnimation) {\n      if (self.enabled) {\n        reset !== false && self.revert();\n        self.enabled = self.isActive = false;\n        allowAnimation || scrubTween && scrubTween.pause();\n        prevScroll = 0;\n        pinCache && (pinCache.uncache = 1);\n        onRefreshInit && _removeListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\n        if (snapDelayedCall) {\n          snapDelayedCall.pause();\n          tweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);\n        }\n\n        if (!isViewport) {\n          var i = _triggers.length;\n\n          while (i--) {\n            if (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n              return; //don't remove the listeners if there are still other triggers referencing it.\n            }\n          }\n\n          _removeListener(scroller, \"resize\", _onResize);\n\n          _removeListener(scroller, \"scroll\", _onScroll);\n        }\n      }\n    };\n\n    self.kill = function (revert, allowAnimation) {\n      self.disable(revert, allowAnimation);\n      scrubTween && !allowAnimation && scrubTween.kill();\n      id && delete _ids[id];\n\n      var i = _triggers.indexOf(self);\n\n      i >= 0 && _triggers.splice(i, 1);\n      i === _i && _direction > 0 && _i--; // if we're in the middle of a refresh() or update(), splicing would cause skips in the index, so adjust...\n      // if no other ScrollTrigger instances of the same scroller are found, wipe out any recorded scroll position. Otherwise, in a single page application, for example, it could maintain scroll position when it really shouldn't.\n\n      i = 0;\n\n      _triggers.forEach(function (t) {\n        return t.scroller === self.scroller && (i = 1);\n      });\n\n      i || (self.scroll.rec = 0);\n\n      if (animation) {\n        animation.scrollTrigger = null;\n        revert && animation.render(-1);\n        allowAnimation || animation.kill();\n      }\n\n      markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function (m) {\n        return m.parentNode && m.parentNode.removeChild(m);\n      });\n      _primary === self && (_primary = 0);\n\n      if (pin) {\n        pinCache && (pinCache.uncache = 1);\n        i = 0;\n\n        _triggers.forEach(function (t) {\n          return t.pin === pin && i++;\n        });\n\n        i || (pinCache.spacer = 0); // if there aren't any more ScrollTriggers with the same pin, remove the spacer, otherwise it could be contaminated with old/stale values if the user re-creates a ScrollTrigger for the same element.\n      }\n\n      vars.onKill && vars.onKill(self);\n    };\n\n    self.enable(false, false);\n    customRevertReturn && customRevertReturn(self);\n    !animation || !animation.add || change ? self.refresh() : gsap.delayedCall(0.01, function () {\n      return start || end || self.refresh();\n    }) && (change = 0.01) && (start = end = 0); // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick. If \"change\" is defined, we know it must be re-enabling, thus we can refresh() right away.\n  };\n\n  ScrollTrigger.register = function register(core) {\n    if (!_coreInitted) {\n      gsap = core || _getGSAP();\n      _windowExists() && window.document && ScrollTrigger.enable();\n      _coreInitted = _enabled;\n    }\n\n    return _coreInitted;\n  };\n\n  ScrollTrigger.defaults = function defaults(config) {\n    if (config) {\n      for (var p in config) {\n        _defaults[p] = config[p];\n      }\n    }\n\n    return _defaults;\n  };\n\n  ScrollTrigger.disable = function disable(reset, kill) {\n    _enabled = 0;\n\n    _triggers.forEach(function (trigger) {\n      return trigger[kill ? \"kill\" : \"disable\"](reset);\n    });\n\n    _removeListener(_win, \"wheel\", _onScroll);\n\n    _removeListener(_doc, \"scroll\", _onScroll);\n\n    clearInterval(_syncInterval);\n\n    _removeListener(_doc, \"touchcancel\", _passThrough);\n\n    _removeListener(_body, \"touchstart\", _passThrough);\n\n    _multiListener(_removeListener, _doc, \"pointerdown,touchstart,mousedown\", _pointerDownHandler);\n\n    _multiListener(_removeListener, _doc, \"pointerup,touchend,mouseup\", _pointerUpHandler);\n\n    _resizeDelay.kill();\n\n    _iterateAutoRefresh(_removeListener);\n\n    for (var i = 0; i < _scrollers.length; i += 3) {\n      _wheelListener(_removeListener, _scrollers[i], _scrollers[i + 1]);\n\n      _wheelListener(_removeListener, _scrollers[i], _scrollers[i + 2]);\n    }\n  };\n\n  ScrollTrigger.enable = function enable() {\n    _win = window;\n    _doc = document;\n    _docEl = _doc.documentElement;\n    _body = _doc.body;\n\n    if (gsap) {\n      _toArray = gsap.utils.toArray;\n      _clamp = gsap.utils.clamp;\n      _suppressOverwrites = gsap.core.suppressOverwrites || _passThrough;\n      gsap.core.globals(\"ScrollTrigger\", ScrollTrigger); // must register the global manually because in Internet Explorer, functions (classes) don't have a \"name\" property.\n\n      if (_body) {\n        _enabled = 1;\n        Observer.register(gsap); // isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\n        ScrollTrigger.isTouch = Observer.isTouch;\n        _fixIOSBug = Observer.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent); // since 2017, iOS has had a bug that causes event.clientX/Y to be inaccurate when a scroll occurs, thus we must alternate ignoring every other touchmove event to work around it. See https://bugs.webkit.org/show_bug.cgi?id=181954 and https://codepen.io/GreenSock/pen/ExbrPNa/087cef197dc35445a0951e8935c41503\n\n        _addListener(_win, \"wheel\", _onScroll); // mostly for 3rd party smooth scrolling libraries.\n\n\n        _root = [_win, _doc, _docEl, _body];\n        ScrollTrigger.matchMedia({\n          // when orientation changes, we should take new base measurements for the ignoreMobileResize feature.\n          \"(orientation: portrait)\": function orientationPortrait() {\n            _setBaseDimensions();\n\n            return _setBaseDimensions;\n          }\n        });\n\n        _addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\n\n        var bodyStyle = _body.style,\n            border = bodyStyle.borderTopStyle,\n            bounds,\n            i;\n        bodyStyle.borderTopStyle = \"solid\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\n        bounds = _getBounds(_body);\n        _vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\n        _horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n        border ? bodyStyle.borderTopStyle = border : bodyStyle.removeProperty(\"border-top-style\"); // TODO: (?) maybe move to leveraging the velocity mechanism in Observer and skip intervals.\n\n        _syncInterval = setInterval(_sync, 250);\n        gsap.delayedCall(0.5, function () {\n          return _startup = 0;\n        });\n\n        _addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\n\n        _addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\n\n        _multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", _pointerDownHandler);\n\n        _multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", _pointerUpHandler);\n\n        _transformProp = gsap.utils.checkPrefix(\"transform\");\n\n        _stateProps.push(_transformProp);\n\n        _coreInitted = _getTime();\n        _resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n        _autoRefresh = [_doc, \"visibilitychange\", function () {\n          var w = _win.innerWidth,\n              h = _win.innerHeight;\n\n          if (_doc.hidden) {\n            _prevWidth = w;\n            _prevHeight = h;\n          } else if (_prevWidth !== w || _prevHeight !== h) {\n            _onResize();\n          }\n        }, _doc, \"DOMContentLoaded\", _refreshAll, _win, \"load\", _refreshAll, _win, \"resize\", _onResize];\n\n        _iterateAutoRefresh(_addListener);\n\n        _triggers.forEach(function (trigger) {\n          return trigger.enable(0, 1);\n        });\n\n        for (i = 0; i < _scrollers.length; i += 3) {\n          _wheelListener(_removeListener, _scrollers[i], _scrollers[i + 1]);\n\n          _wheelListener(_removeListener, _scrollers[i], _scrollers[i + 2]);\n        }\n      }\n    }\n  };\n\n  ScrollTrigger.config = function config(vars) {\n    \"limitCallbacks\" in vars && (_limitCallbacks = !!vars.limitCallbacks);\n    var ms = vars.syncInterval;\n    ms && clearInterval(_syncInterval) || (_syncInterval = ms) && setInterval(_sync, ms);\n    \"ignoreMobileResize\" in vars && (_ignoreMobileResize = ScrollTrigger.isTouch === 1 && vars.ignoreMobileResize);\n\n    if (\"autoRefreshEvents\" in vars) {\n      _iterateAutoRefresh(_removeListener) || _iterateAutoRefresh(_addListener, vars.autoRefreshEvents || \"none\");\n      _ignoreResize = (vars.autoRefreshEvents + \"\").indexOf(\"resize\") === -1;\n    }\n  };\n\n  ScrollTrigger.scrollerProxy = function scrollerProxy(target, vars) {\n    var t = _getTarget(target),\n        i = _scrollers.indexOf(t),\n        isViewport = _isViewport(t);\n\n    if (~i) {\n      _scrollers.splice(i, isViewport ? 6 : 2);\n    }\n\n    if (vars) {\n      isViewport ? _proxies.unshift(_win, vars, _body, vars, _docEl, vars) : _proxies.unshift(t, vars);\n    }\n  };\n\n  ScrollTrigger.matchMedia = function matchMedia(vars) {\n    // _media is populated in the following order: mediaQueryString, onMatch, onUnmatch, isMatched. So if there are two media queries, the Array would have a length of 8\n    var mq, p, i, func, result;\n\n    for (p in vars) {\n      i = _media.indexOf(p);\n      func = vars[p];\n      _creatingMedia = p;\n\n      if (p === \"all\") {\n        func();\n      } else {\n        mq = _win.matchMedia(p);\n\n        if (mq) {\n          mq.matches && (result = func());\n\n          if (~i) {\n            _media[i + 1] = _combineFunc(_media[i + 1], func);\n            _media[i + 2] = _combineFunc(_media[i + 2], result);\n          } else {\n            i = _media.length;\n\n            _media.push(p, func, result);\n\n            mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener(\"change\", _onMediaChange);\n          }\n\n          _media[i + 3] = mq.matches;\n        }\n      }\n\n      _creatingMedia = 0;\n    }\n\n    return _media;\n  };\n\n  ScrollTrigger.clearMatchMedia = function clearMatchMedia(query) {\n    query || (_media.length = 0);\n    query = _media.indexOf(query);\n    query >= 0 && _media.splice(query, 4);\n  };\n\n  ScrollTrigger.isInViewport = function isInViewport(element, ratio, horizontal) {\n    var bounds = (_isString(element) ? _getTarget(element) : element).getBoundingClientRect(),\n        offset = bounds[horizontal ? _width : _height] * ratio || 0;\n    return horizontal ? bounds.right - offset > 0 && bounds.left + offset < _win.innerWidth : bounds.bottom - offset > 0 && bounds.top + offset < _win.innerHeight;\n  };\n\n  ScrollTrigger.positionInViewport = function positionInViewport(element, referencePoint, horizontal) {\n    _isString(element) && (element = _getTarget(element));\n    var bounds = element.getBoundingClientRect(),\n        size = bounds[horizontal ? _width : _height],\n        offset = referencePoint == null ? size / 2 : referencePoint in _keywords ? _keywords[referencePoint] * size : ~referencePoint.indexOf(\"%\") ? parseFloat(referencePoint) * size / 100 : parseFloat(referencePoint) || 0;\n    return horizontal ? (bounds.left + offset) / _win.innerWidth : (bounds.top + offset) / _win.innerHeight;\n  };\n\n  return ScrollTrigger;\n}();\nScrollTrigger.version = \"3.10.4\";\n\nScrollTrigger.saveStyles = function (targets) {\n  return targets ? _toArray(targets).forEach(function (target) {\n    // saved styles are recorded in a consecutive alternating Array, like [element, cssText, transform attribute, cache, matchMedia, ...]\n    if (target && target.style) {\n      var i = _savedStyles.indexOf(target);\n\n      i >= 0 && _savedStyles.splice(i, 5);\n\n      _savedStyles.push(target, target.style.cssText, target.getBBox && target.getAttribute(\"transform\"), gsap.core.getCache(target), _creatingMedia);\n    }\n  }) : _savedStyles;\n};\n\nScrollTrigger.revert = function (soft, media) {\n  return _revertAll(!soft, media);\n};\n\nScrollTrigger.create = function (vars, animation) {\n  return new ScrollTrigger(vars, animation);\n};\n\nScrollTrigger.refresh = function (safe) {\n  return safe ? _onResize() : (_coreInitted || ScrollTrigger.register()) && _refreshAll(true);\n};\n\nScrollTrigger.update = _updateAll;\nScrollTrigger.clearScrollMemory = _clearScrollMemory;\n\nScrollTrigger.maxScroll = function (element, horizontal) {\n  return _maxScroll(element, horizontal ? _horizontal : _vertical);\n};\n\nScrollTrigger.getScrollFunc = function (element, horizontal) {\n  return _getScrollFunc(_getTarget(element), horizontal ? _horizontal : _vertical);\n};\n\nScrollTrigger.getById = function (id) {\n  return _ids[id];\n};\n\nScrollTrigger.getAll = function () {\n  return _triggers.filter(function (t) {\n    return t.vars.id !== \"ScrollSmoother\";\n  });\n}; // it's common for people to ScrollTrigger.getAll(t => t.kill()) on page routes, for example, and we don't want it to ruin smooth scrolling by killing the main ScrollSmoother one.\n\n\nScrollTrigger.isScrolling = function () {\n  return !!_lastScrollTime;\n};\n\nScrollTrigger.snapDirectional = _snapDirectional;\n\nScrollTrigger.addEventListener = function (type, callback) {\n  var a = _listeners[type] || (_listeners[type] = []);\n  ~a.indexOf(callback) || a.push(callback);\n};\n\nScrollTrigger.removeEventListener = function (type, callback) {\n  var a = _listeners[type],\n      i = a && a.indexOf(callback);\n  i >= 0 && a.splice(i, 1);\n};\n\nScrollTrigger.batch = function (targets, vars) {\n  var result = [],\n      varsCopy = {},\n      interval = vars.interval || 0.016,\n      batchMax = vars.batchMax || 1e9,\n      proxyCallback = function proxyCallback(type, callback) {\n    var elements = [],\n        triggers = [],\n        delay = gsap.delayedCall(interval, function () {\n      callback(elements, triggers);\n      elements = [];\n      triggers = [];\n    }).pause();\n    return function (self) {\n      elements.length || delay.restart(true);\n      elements.push(self.trigger);\n      triggers.push(self);\n      batchMax <= elements.length && delay.progress(1);\n    };\n  },\n      p;\n\n  for (p in vars) {\n    varsCopy[p] = p.substr(0, 2) === \"on\" && _isFunction(vars[p]) && p !== \"onRefreshInit\" ? proxyCallback(p, vars[p]) : vars[p];\n  }\n\n  if (_isFunction(batchMax)) {\n    batchMax = batchMax();\n\n    _addListener(ScrollTrigger, \"refresh\", function () {\n      return batchMax = vars.batchMax();\n    });\n  }\n\n  _toArray(targets).forEach(function (target) {\n    var config = {};\n\n    for (p in varsCopy) {\n      config[p] = varsCopy[p];\n    }\n\n    config.trigger = target;\n    result.push(ScrollTrigger.create(config));\n  });\n\n  return result;\n}; // to reduce file size. clamps the scroll and also returns a duration multiplier so that if the scroll gets chopped shorter, the duration gets curtailed as well (otherwise if you're very close to the top of the page, for example, and swipe up really fast, it'll suddenly slow down and take a long time to reach the top).\n\n\nvar _clampScrollAndGetDurationMultiplier = function _clampScrollAndGetDurationMultiplier(scrollFunc, current, end, max) {\n  current > max ? scrollFunc(max) : current < 0 && scrollFunc(0);\n  return end > max ? (max - current) / (end - current) : end < 0 ? current / (current - end) : 1;\n},\n    _allowNativePanning = function _allowNativePanning(target, direction) {\n  if (direction === true) {\n    target.style.removeProperty(\"touch-action\");\n  } else {\n    target.style.touchAction = direction === true ? \"auto\" : direction ? \"pan-\" + direction + (Observer.isTouch ? \" pinch-zoom\" : \"\") : \"none\"; // note: Firefox doesn't support it pinch-zoom properly, at least in addition to a pan-x or pan-y.\n  }\n\n  target === _docEl && _allowNativePanning(_body, direction);\n},\n    _overflow = {\n  auto: 1,\n  scroll: 1\n},\n    _nestedScroll = function _nestedScroll(_ref5) {\n  var event = _ref5.event,\n      target = _ref5.target,\n      axis = _ref5.axis;\n\n  var node = (event.changedTouches ? event.changedTouches[0] : event).target,\n      cache = node._gsap || gsap.core.getCache(node),\n      time = _getTime(),\n      cs;\n\n  if (!cache._isScrollT || time - cache._isScrollT > 2000) {\n    // cache for 2 seconds to improve performance.\n    while (node && node.scrollHeight <= node.clientHeight) {\n      node = node.parentNode;\n    }\n\n    cache._isScroll = node && !_isViewport(node) && node !== target && (_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]);\n    cache._isScrollT = time;\n  }\n\n  (cache._isScroll || axis === \"x\") && (event._gsapAllow = true);\n},\n    // capture events on scrollable elements INSIDE the <body> and allow those by calling stopPropagation() when we find a scrollable ancestor\n_inputObserver = function _inputObserver(target, type, inputs, nested) {\n  return Observer.create({\n    target: target,\n    capture: true,\n    debounce: false,\n    lockAxis: true,\n    type: type,\n    onWheel: nested = nested && _nestedScroll,\n    onPress: nested,\n    onDrag: nested,\n    onScroll: nested,\n    onEnable: function onEnable() {\n      return inputs && _addListener(_doc, Observer.eventTypes[0], _captureInputs, false, true);\n    },\n    onDisable: function onDisable() {\n      return _removeListener(_doc, Observer.eventTypes[0], _captureInputs, true);\n    }\n  });\n},\n    _inputExp = /(input|label|select|textarea)/i,\n    _inputIsFocused,\n    _captureInputs = function _captureInputs(e) {\n  var isInput = _inputExp.test(e.target.tagName);\n\n  if (isInput || _inputIsFocused) {\n    e._gsapAllow = true;\n    _inputIsFocused = isInput;\n  }\n},\n    _getScrollNormalizer = function _getScrollNormalizer(vars) {\n  _isObject(vars) || (vars = {});\n  vars.preventDefault = vars.isNormalizer = vars.allowClicks = true;\n  vars.type || (vars.type = \"wheel,touch\");\n  vars.debounce = !!vars.debounce;\n  vars.id = vars.id || \"normalizer\";\n\n  var _vars2 = vars,\n      normalizeScrollX = _vars2.normalizeScrollX,\n      momentum = _vars2.momentum,\n      allowNestedScroll = _vars2.allowNestedScroll,\n      self,\n      maxY,\n      target = _getTarget(vars.target) || _docEl,\n      smoother = gsap.core.globals().ScrollSmoother,\n      content = _fixIOSBug && (vars.content && _getTarget(vars.content) || smoother && smoother.get() && smoother.get().content()),\n      scrollFuncY = _getScrollFunc(target, _vertical),\n      scrollFuncX = _getScrollFunc(target, _horizontal),\n      scale = 1,\n      initialScale = (Observer.isTouch && _win.visualViewport ? _win.visualViewport.scale * _win.visualViewport.width : _win.outerWidth) / _win.innerWidth,\n      wheelRefresh = 0,\n      resolveMomentumDuration = _isFunction(momentum) ? function () {\n    return momentum(self);\n  } : function () {\n    return momentum || 2.8;\n  },\n      skipTouchMove,\n      lastRefreshID,\n      inputObserver = _inputObserver(target, vars.type, true, allowNestedScroll),\n      resumeTouchMove = function resumeTouchMove() {\n    return skipTouchMove = false;\n  },\n      scrollClampX = _passThrough,\n      scrollClampY = _passThrough,\n      updateClamps = function updateClamps() {\n    maxY = _maxScroll(target, _vertical);\n    scrollClampY = _clamp(_fixIOSBug ? 1 : 0, maxY);\n    normalizeScrollX && (scrollClampX = _clamp(0, _maxScroll(target, _horizontal)));\n    lastRefreshID = _refreshID;\n  },\n      ignoreDrag = function ignoreDrag() {\n    if (skipTouchMove) {\n      requestAnimationFrame(resumeTouchMove); // we MUST wait for a requestAnimationFrame, otherwise iOS will misreport the value.\n\n      var offset = _round(self.deltaY / 2),\n          scroll = scrollClampY(scrollFuncY.v - offset);\n\n      if (content && scroll !== scrollFuncY.v + scrollFuncY.offset) {\n        scrollFuncY.offset = scroll - scrollFuncY.v;\n        content.style.transform = \"translateY(\" + -scrollFuncY.offset + \"px)\";\n        content._gsap && (content._gsap.y = -scrollFuncY.offset + \"px\");\n        scrollFuncY.cacheID = _scrollers.cache;\n\n        _updateAll();\n      }\n\n      return true;\n    }\n\n    if (content) {\n      content.style.transform = \"translateY(0px)\";\n      scrollFuncY.offset = scrollFuncY.cacheID = 0;\n      content._gsap && (content._gsap.y = \"0px\");\n    }\n\n    skipTouchMove = true;\n  },\n      tween,\n      startScrollX,\n      startScrollY,\n      onStopDelayedCall,\n      onResize = function onResize() {\n    // if the window resizes, like on an iPhone which Apple FORCES the address bar to show/hide even if we event.preventDefault(), it may be scrolling too far now that the address bar is showing, so we must dynamically adjust the momentum tween.\n    updateClamps();\n\n    if (tween.isActive() && tween.vars.scrollY > maxY) {\n      scrollFuncY() > maxY ? tween.progress(1) && scrollFuncY(maxY) : tween.resetTo(\"scrollY\", maxY);\n    }\n  };\n\n  vars.ignoreCheck = function (e) {\n    return _fixIOSBug && e.type === \"touchmove\" && ignoreDrag(e) || scale > 1.05 && e.type !== \"touchstart\" || self.isGesturing || e.touches && e.touches.length > 1;\n  };\n\n  vars.onPress = function () {\n    var prevScale = scale;\n    scale = _round((_win.visualViewport && _win.visualViewport.scale || 1) / initialScale);\n    tween.pause();\n    prevScale !== scale && _allowNativePanning(target, scale > 1.01 ? true : normalizeScrollX ? false : \"x\");\n    skipTouchMove = false;\n    startScrollX = scrollFuncX();\n    startScrollY = scrollFuncY();\n    updateClamps();\n    lastRefreshID = _refreshID;\n  };\n\n  vars.onRelease = vars.onGestureStart = function (self, wasDragging) {\n    if (content) {\n      content.style.transform = \"translateY(0px)\";\n      scrollFuncY.offset = scrollFuncY.cacheID = 0;\n      content._gsap && (content._gsap.y = \"0px\");\n    }\n\n    if (!wasDragging) {\n      onStopDelayedCall.restart(true);\n    } else {\n      _scrollers.cache++; // make sure we're pulling the non-cached value\n      // alternate algorithm: durX = Math.min(6, Math.abs(self.velocityX / 800)),\tdur = Math.max(durX, Math.min(6, Math.abs(self.velocityY / 800))); dur = dur * (0.4 + (1 - _power4In(dur / 6)) * 0.6)) * (momentumSpeed || 1)\n\n      var dur = resolveMomentumDuration(),\n          currentScroll,\n          endScroll;\n\n      if (normalizeScrollX) {\n        currentScroll = scrollFuncX();\n        endScroll = currentScroll + dur * 0.05 * -self.velocityX / 0.227; // the constant .227 is from power4(0.05). velocity is inverted because scrolling goes in the opposite direction.\n\n        dur *= _clampScrollAndGetDurationMultiplier(scrollFuncX, currentScroll, endScroll, _maxScroll(target, _horizontal));\n        tween.vars.scrollX = scrollClampX(endScroll);\n      }\n\n      currentScroll = scrollFuncY();\n      endScroll = currentScroll + dur * 0.05 * -self.velocityY / 0.227; // the constant .227 is from power4(0.05)\n\n      dur *= _clampScrollAndGetDurationMultiplier(scrollFuncY, currentScroll, endScroll, _maxScroll(target, _vertical));\n      tween.vars.scrollY = scrollClampY(endScroll);\n      tween.invalidate().duration(dur).play(0.01);\n\n      if (_fixIOSBug && tween.vars.scrollY >= maxY || currentScroll >= maxY - 1) {\n        // iOS bug: it'll show the address bar but NOT fire the window \"resize\" event until the animation is done but we must protect against overshoot so we leverage an onUpdate to do so.\n        gsap.to({}, {\n          onUpdate: onResize,\n          duration: dur\n        });\n      }\n    }\n  };\n\n  vars.onWheel = function () {\n    tween._ts && tween.pause();\n\n    if (_getTime() - wheelRefresh > 1000) {\n      // after 1 second, refresh the clamps otherwise that'll only happen when ScrollTrigger.refresh() is called or for touch-scrolling.\n      lastRefreshID = 0;\n      wheelRefresh = _getTime();\n    }\n  };\n\n  vars.onChange = function (self, dx, dy, xArray, yArray) {\n    _refreshID !== lastRefreshID && updateClamps();\n    dx && normalizeScrollX && scrollFuncX(scrollClampX(xArray[2] === dx ? startScrollX + (self.startX - self.x) : scrollFuncX() + dx - xArray[1])); // for more precision, we track pointer/touch movement from the start, otherwise it'll drift.\n\n    dy && scrollFuncY(scrollClampY(yArray[2] === dy ? startScrollY + (self.startY - self.y) : scrollFuncY() + dy - yArray[1]));\n\n    _updateAll();\n  };\n\n  vars.onEnable = function () {\n    _allowNativePanning(target, normalizeScrollX ? false : \"x\");\n\n    _addListener(_win, \"resize\", onResize);\n\n    inputObserver.enable();\n  };\n\n  vars.onDisable = function () {\n    _allowNativePanning(target, true);\n\n    _removeListener(_win, \"resize\", onResize);\n\n    inputObserver.kill();\n  };\n\n  self = new Observer(vars);\n  self.iOS = _fixIOSBug; // used in the Observer getCachedScroll() function to work around an iOS bug that wreaks havoc with TouchEvent.clientY if we allow scroll to go all the way back to 0.\n\n  _fixIOSBug && !scrollFuncY() && scrollFuncY(1); // iOS bug causes event.clientY values to freak out (wildly inaccurate) if the scroll position is exactly 0.\n\n  onStopDelayedCall = self._dc;\n  tween = gsap.to(self, {\n    ease: \"power4\",\n    paused: true,\n    scrollX: normalizeScrollX ? \"+=0.1\" : \"+=0\",\n    scrollY: \"+=0.1\",\n    onComplete: onStopDelayedCall.vars.onComplete\n  });\n  return self;\n};\n\nScrollTrigger.sort = function (func) {\n  return _triggers.sort(func || function (a, b) {\n    return (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6);\n  });\n};\n\nScrollTrigger.observe = function (vars) {\n  return new Observer(vars);\n};\n\nScrollTrigger.normalizeScroll = function (vars) {\n  if (typeof vars === \"undefined\") {\n    return _normalizer;\n  }\n\n  if (vars === true && _normalizer) {\n    return _normalizer.enable();\n  }\n\n  if (vars === false) {\n    return _normalizer && _normalizer.kill();\n  }\n\n  var normalizer = vars instanceof Observer ? vars : _getScrollNormalizer(vars);\n  _normalizer && _normalizer.target === normalizer.target && _normalizer.kill();\n  _isViewport(normalizer.target) && (_normalizer = normalizer);\n  return normalizer;\n};\n\nScrollTrigger.core = {\n  // smaller file size way to leverage in ScrollSmoother and Observer\n  _getVelocityProp: _getVelocityProp,\n  _inputObserver: _inputObserver,\n  _scrollers: _scrollers,\n  _proxies: _proxies,\n  bridge: {\n    // when normalizeScroll sets the scroll position (ss = setScroll)\n    ss: function ss() {\n      _lastScrollTime || _dispatch(\"scrollStart\");\n      _lastScrollTime = _getTime();\n    },\n    // a way to get the _refreshing value in Observer\n    ref: function ref() {\n      return _refreshing;\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\nexport { ScrollTrigger as default };","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { gsap }  from 'gsap'\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\n// import SmoothScrollbar from 'smooth-scrollbar'\n\n\n\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport * as styles from '../components/index.module.css'\n\n\n\nconst links = [\n  {\n    text: 'Tutorial',\n    url: 'https://www.gatsbyjs.com/docs/tutorial',\n    description:\n      'A great place to get started if you\\'re new to web development. Designed to guide you through setting up your first Gatsby site.',\n  },\n  {\n    text: 'Examples',\n    url: 'https://github.com/gatsbyjs/gatsby/tree/master/examples',\n    description:\n      'A collection of websites ranging from very basic to complex/complete that illustrate how to accomplish specific tasks within your Gatsby sites.',\n  },\n  {\n    text: 'Plugin Library',\n    url: 'https://www.gatsbyjs.com/plugins',\n    description:\n      'Learn how to add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.',\n  },\n  {\n    text: 'Build and Host',\n    url: 'https://www.gatsbyjs.com/cloud',\n    description:\n      'Now you’re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!',\n  },\n]\n\nconst samplePageLinks = [\n  {\n    text: 'Page 2',\n    url: 'page-2',\n    badge: false,\n    description:\n      'A simple example of linking to another page within a Gatsby site',\n  },\n  { text: 'Server Side Rendering', url: 'using-ssr' },\n]\n\nconst moreLinks = [\n  { text: 'Join us on Discord', url: 'https://gatsby.dev/discord' },\n  {\n    text: 'Documentation',\n    url: 'https://gatsbyjs.com/docs/',\n  },\n  {\n    text: 'Starters',\n    url: 'https://gatsbyjs.com/starters/',\n  },\n  {\n    text: 'Showcase',\n    url: 'https://gatsbyjs.com/showcase/',\n  },\n  {\n    text: 'Contributing',\n    url: 'https://www.gatsbyjs.com/contributing/',\n  },\n  { text: 'Issues', url: 'https://github.com/gatsbyjs/gatsby/issues' },\n]\n\nconst utmParameters = '?utm_source=starter&utm_medium=start-page&utm_campaign=default-starter'\n\nconst IndexPage = () => {\n  gsap.registerPlugin(ScrollTrigger);\n\n  const triggerRef = React.useRef()\n\n  React.useLayoutEffect(() => {\n\n    gsap.registerPlugin(ScrollTrigger);\n\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: triggerRef.current,\n        start: \"0 30%\",\n        end: \"center top\",\n        scrub: true,\n        pin: true,\n        markers: true\n      }\n    });\n    tl.to(\".box\", {yPercent: 89, duration: 1})\n    tl.to(\".box\", {rotation: 360, duration: 3})\n    tl.to(\".box\", {xPercent: 350, duration: 1})\n\n    return () => {\n      tl.kill(true)\n    };\n  }, []);\n\n\n\n  return (\n  <Layout>\n    <Seo title=\"Home\" />\n    <div className={styles.textCenter}>\n      <StaticImage\n        src=\"../images/gatsby-icon.png\"\n        loading=\"eager\"\n        width={64}\n        quality={95}\n        formats={['auto', 'webp', 'avif']}\n        alt=\"\"\n        style={{ marginBottom: 'var(--space-3)' }}\n      />\n      <h1>\n        Welcome to <b>Gatsby!</b>\n      </h1>\n      <p className={styles.intro}>\n        <b>Example pages:</b>{' '}\n        {samplePageLinks.map((link, i) => (\n          <React.Fragment key={link.url}>\n            <Link to={link.url}>{link.text}</Link>\n            {i !== samplePageLinks.length - 1 && <> · </>}\n          </React.Fragment>\n        ))}\n        <br />\n        Edit <code>src/pages/index.js</code> to update this page.\n      </p>\n    </div>\n    <ul className={styles.list}>\n      {links.map(link => (\n        <li key={link.url} className={styles.listItem}>\n          <a\n            className={styles.listItemLink}\n            href={`${link.url}${utmParameters}`}\n          >\n            {link.text} ↗\n          </a>\n          <p className={styles.listItemDescription}>{link.description}</p>\n        </li>\n      ))}\n    </ul>\n\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n\n    <div className=\"trigger\" ref={triggerRef}>\n      <div className=\"box\"></div>\n    </div>\n\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n\n    Scroll\n\n    {moreLinks.map((link, i) => (\n      <React.Fragment key={link.url}>\n        <a href={`${link.url}${utmParameters}`}>{link.text}</a>\n        {i !== moreLinks.length - 1 && <> · </>}\n      </React.Fragment>\n    ))}\n  </Layout>\n)\n}\n\nexport default IndexPage\n","// extracted by mini-css-extract-plugin\nexport var intro = \"index-module--intro--C4dpM\";\nexport var list = \"index-module--list--+0B75\";\nexport var listItem = \"index-module--listItem--BubbZ\";\nexport var listItemDescription = \"index-module--listItemDescription--84dWA\";\nexport var listItemLink = \"index-module--listItemLink--Asns5\";\nexport var textCenter = \"index-module--textCenter--Ts42-\";","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_coreInitted","_win","_doc","_docEl","_body","_isTouch","_pointerType","ScrollTrigger","_root","_normalizer","_eventTypes","_getGSAP","window","gsap","registerPlugin","_startup","_observers","_scrollers","_proxies","_getTime","Date","now","_bridge","name","value","_getProxyProp","element","property","indexOf","_isViewport","el","_addListener","type","func","nonPassive","capture","addEventListener","passive","_removeListener","removeEventListener","_scrollLeft","_scrollTop","_onScroll","isPressed","cache","_scrollCacheFunc","f","doNotCache","cachingFunc","history","scrollRestoration","isNormalizing","v","Math","round","iOS","cacheID","offset","_horizontal","s","p","p2","os","os2","d","d2","a","sc","arguments","scrollTo","_vertical","pageXOffset","op","pageYOffset","_getTarget","t","utils","toArray","config","nullTargetWarn","console","warn","_getScrollFunc","_ref","push","_getVelocityProp","minTimeRefresh","useDelta","v1","v2","t1","t2","min","dropToZeroTime","max","update","force","reset","getVelocity","latestValue","tOld","vOld","_getEvent","e","preventDefault","_gsapAllow","changedTouches","_getAbsoluteMax","apply","abs","_setScrollTrigger","core","data","scrollers","proxies","globals","bridge","_initCore","document","body","documentElement","clamp","Observer","isTouch","matchMedia","matches","navigator","maxTouchPoints","msMaxTouchPoints","eventTypes","split","setTimeout","vars","this","init","Constructor","protoProps","staticProps","prototype","tolerance","dragMinimum","lineHeight","debounce","onStop","onStopDelay","ignore","wheelSpeed","event","onDragStart","onDragEnd","onDrag","onPress","onRelease","onRight","onLeft","onUp","onDown","onChangeX","onChangeY","onChange","onToggleX","onToggleY","onHover","onHoverEnd","onMove","ignoreCheck","isNormalizer","onGestureStart","onGestureEnd","onWheel","onEnable","onDisable","onClick","scrollSpeed","allowClicks","lockAxis","onLockAxis","parseFloat","getComputedStyle","id","onStopDelayedCall","dragged","moved","wheeled","locked","axis","self","prevDeltaX","prevDeltaY","scrollFuncX","scrollFuncY","scrollX","scrollY","limitToTouch","isViewport","ownerDoc","ownerDocument","deltaX","deltaY","onClickTime","clickCapture","_ignoreCheck","isPointerOrTouch","pointerType","dx","dy","changedX","changedY","onDelta","y","index","_vx","_vy","requestAnimationFrame","onTouchOrPointerDelta","_onDrag","clientX","clientY","isDragging","startX","startY","_onPress","pause","_onRelease","wasDragging","eventData","delayedCall","defaultPrevented","click","createEvent","syntheticEvent","initMouseEvent","screenX","screenY","dispatchEvent","isGesturing","restart","_onGestureStart","touches","_onGestureEnd","onScroll","_onWheel","multiplier","deltaMode","innerHeight","_onMove","_onHover","_onHoverEnd","_onClick","_dc","enable","isEnabled","disable","o","kill","splice","get","version","create","register","getAll","getById","_resizeDelay","_toArray","_time2","_syncInterval","_refreshing","_pointerIsDown","_transformProp","_i","_prevWidth","_prevHeight","_autoRefresh","_sort","_suppressOverwrites","_ignoreResize","_ignoreMobileResize","_baseScreenHeight","_baseScreenWidth","_fixIOSBug","_limitCallbacks","_rafID","_creatingMedia","_lastMediaTick","_refreshingAll","_primary","_time1","_lastScrollTime","_enabled","_pointerDownHandler","_pointerUpHandler","_round","_windowExists","_getBoundsFunc","_winOffsets","width","innerWidth","height","_getBounds","_maxScroll","_ref2","_iterateAutoRefresh","events","_isString","_isFunction","_isNumber","_isObject","_callIfFunc","_combineFunc","f1","f2","result1","result2","_endAnimation","animation","reversed","progress","_callback","enabled","result","totalTime","callbackAnimation","_abs","_left","_right","_bottom","_width","_height","_padding","_margin","_Width","_px","_getComputedStyle","_setDefaults","obj","defaults","withoutTransforms","tween","to","xPercent","yPercent","rotation","rotationX","rotationY","scale","skewX","skewY","bounds","getBoundingClientRect","_getSize","_ref3","_getLabelRatioArray","timeline","labels","duration","_snapDirectional","snapIncrementOrArray","snap","sort","b","direction","threshold","snapped","_multiListener","types","callback","forEach","_wheelListener","scrollFunc","wheelHandler","_markerDefaults","startColor","endColor","indent","fontSize","fontWeight","_defaults","toggleActions","anticipatePin","_keywords","top","left","center","bottom","right","_offsetToPx","size","eqIndex","relative","substr","_createMarker","container","_ref4","matchWidthEl","containerAnimation","createElement","useFixedPosition","isScroller","parent","isStart","color","css","offsetWidth","_isStart","setAttribute","style","cssText","innerText","children","insertBefore","appendChild","_offset","_positionMarker","marker","start","flipped","display","side","oppositeSide","_isFlipped","set","_triggers","_ids","_sync","_updateAll","clientWidth","_dispatch","_setBaseDimensions","_onResize","fullscreenElement","webkitFullscreenElement","_listeners","_emptyArray","_media","_onMediaChange","tick","ticker","frame","_revertAll","_revertRecorded","_refreshAll","_softRefresh","_savedStyles","media","getBBox","uncache","trigger","revert","_clearScrollMemory","rec","_refreshID","skipRevert","refreshInits","refresh","end","setPositions","scroller","_dir","render","_lastScroll","_direction","isUpdating","l","time","recordVelocity","scroll","_propNamesToCopy","_stateProps","concat","_swapPinIn","pin","spacer","cs","spacerState","parentNode","spacerStyle","pinStyle","position","flexBasis","overflow","boxSizing","_setState","_capsExp","state","_gsap","getCache","removeProperty","_getState","_parsePosition","scrollerSize","markerScroller","scrollerBounds","borderWidth","scrollerMax","seek","localOffset","globalOffset","offsets","_caScrollDist","_prefixExp","_reparent","_stOrig","_getTweenCreator","lastScroll1","lastScroll2","getScroll","prop","getTween","initialValue","change1","change2","onComplete","modifiers","ratio","call","tweenTo","pinCache","snapFunc","scroll1","scroll2","markerStart","markerEnd","markerStartTrigger","markerEndTrigger","markerVars","change","pinOriginalState","pinActiveState","pinState","pinGetter","pinSetter","pinStart","pinChange","spacingStart","markerStartSetter","markerEndSetter","snap1","snap2","scrubTween","scrubSmooth","snapDurClamp","snapDelayedCall","prevProgress","prevScroll","prevAnimProgress","caMarkerSetter","customRevertReturn","_vars","nodeType","onUpdate","toggleClass","onToggle","onRefresh","scrub","pinSpacing","invalidateOnRefresh","onScrubComplete","onSnapComplete","once","pinReparent","pinSpacer","fastScrollEnd","preventOverlaps","horizontal","isToggle","scrollerCache","pinType","callbacks","onEnter","onLeave","onEnterBack","onLeaveBack","markers","onRefreshInit","getScrollerSize","_getSizeFunc","getScrollerOffsets","_getOffsetsFunc","lastSnap","lastRefresh","bind","refreshPriority","tweenScroll","scrubDuration","ease","totalProgress","paused","lazy","_initted","immediateRender","scrollTrigger","snapTo","scrollBehavior","_getClosestLabel","st","directional","delay","refreshedRecently","isActive","velocity","naturalEnd","inertia","endValue","endScroll","_snap","onStart","_onInterrupt","onInterrupt","_onComplete","stRevert","targets","className","force3D","current","nativeElement","spacerIsNative","classList","add","getProperty","quickSetter","content","oldOnUpdate","oldParams","onUpdateParams","eventCallback","previous","next","r","prevRefreshing","isReverted","removeChild","_swapPinOut","soft","invalidate","isVertical","override","curTrigger","curPin","oppositeScroll","initted","revertedPins","otherPinOffset","parsedEnd","parsedEndTrigger","endTrigger","parsedStart","pinnedContainer","triggerIndex","unshift","_pinPush","ceil","omitOffsets","_copyState","_pinOffset","endAnimation","labelToScroll","label","getTrailing","reverse","forceFake","toggleState","action","stateChanged","toggled","isAtMax","isTakingAction","clipped","_dp","_time","_start","resetTo","_tTime","_tDur","n","newStart","newEnd","allowAnimation","onKill","clearInterval","suppressOverwrites","userAgent","bodyStyle","border","borderTopStyle","setInterval","checkPrefix","w","h","hidden","limitCallbacks","ms","syncInterval","ignoreMobileResize","autoRefreshEvents","scrollerProxy","mq","addListener","clearMatchMedia","query","isInViewport","positionInViewport","referencePoint","saveStyles","getAttribute","safe","clearScrollMemory","maxScroll","getScrollFunc","isScrolling","snapDirectional","batch","varsCopy","interval","batchMax","proxyCallback","elements","triggers","_inputIsFocused","_clampScrollAndGetDurationMultiplier","_allowNativePanning","touchAction","_overflow","auto","_nestedScroll","_ref5","node","_isScrollT","scrollHeight","clientHeight","_isScroll","overflowY","overflowX","_inputObserver","inputs","nested","_captureInputs","_inputExp","isInput","tagName","_getScrollNormalizer","maxY","skipTouchMove","lastRefreshID","startScrollX","startScrollY","_vars2","normalizeScrollX","momentum","allowNestedScroll","smoother","ScrollSmoother","initialScale","visualViewport","outerWidth","wheelRefresh","resolveMomentumDuration","inputObserver","resumeTouchMove","scrollClampX","scrollClampY","updateClamps","onResize","transform","ignoreDrag","prevScale","currentScroll","dur","velocityX","velocityY","play","_ts","xArray","yArray","observe","normalizeScroll","normalizer","ss","ref","links","text","url","description","samplePageLinks","badge","moreLinks","utmParameters","triggerRef","React","tl","title","S","src","loading","quality","formats","alt","marginBottom","link","Link","href","hasNativeLazyLoadSupport","HTMLImageElement","format","getMainProps","isLoading","isLoaded","images","shouldLoad","opacity","getPlaceholderProps","placeholder","layout","backgroundColor","objectFit","objectPosition","wrapperStyle","transition","output","fallbackImage","Sizer","paddingTop","maxWidth","role","LayoutWrapper","Fragment","q","H","Image","srcSet","decoding","undefined","Picture","fallback","sources","sizes","propTypes","PropTypes","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","renderImageToStringPromise","renderImage","altValidator","rest","image","imageCache","Set","GatsbyImageHydrator","onError","as","preactClass","class","onStartLoad","onLoad","wStyle","wClass","wrapperProps","root","useRef","cacheKey","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","animationFrame","cleanupCallback","ssrImage","querySelector","complete","wasCached","removeAttribute","onLoadListener","has","innerHTML","cancelAnimationFrame","useLayoutEffect","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","checkDimensionProps","validLayouts","StaticImage","GatsbyImageBrowser","__error","imageData","__imageData"],"sourceRoot":""}